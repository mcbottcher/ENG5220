<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_cpp_timer_callback" kind="class" language="C++" prot="public">
    <compoundname>CppTimerCallback</compoundname>
    <basecompoundref refid="class_cpp_timer" prot="public" virt="non-virtual">CppTimer</basecompoundref>
    <includes refid="_cpp_timer_callback_8h" local="no">CppTimerCallback.h</includes>
    <innerclass refid="class_cpp_timer_callback_1_1_runnable" prot="public">CppTimerCallback::Runnable</innerclass>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cpp_timer_callback_1a578cc701cee7be10f3afab2859eac74f" prot="private" static="no" mutable="no">
        <type><ref refid="class_cpp_timer_callback_1_1_runnable" kindref="compound">Runnable</ref> *</type>
        <definition>Runnable* CppTimerCallback::cppTimerEventRunnable</definition>
        <argsstring></argsstring>
        <name>cppTimerEventRunnable</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/CppTimerCallback.h" line="31" column="1" bodyfile="code/cppTimer/CppTimerCallback.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cpp_timer_callback_1ae6e815f1c3b65ea4f10fe0332e13acb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppTimerCallback::registerEventRunnable</definition>
        <argsstring>(Runnable &amp;h)</argsstring>
        <name>registerEventRunnable</name>
        <param>
          <type><ref refid="class_cpp_timer_callback_1_1_runnable" kindref="compound">Runnable</ref> &amp;</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/CppTimerCallback.h" line="16" column="1" bodyfile="code/cppTimer/CppTimerCallback.h" bodystart="16" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="class_cpp_timer_callback_1a29d8d5a426a3d15bca8a42c2c897f50f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CppTimerCallback::unregisterEventRunnable</definition>
        <argsstring>()</argsstring>
        <name>unregisterEventRunnable</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/CppTimerCallback.h" line="20" column="1" bodyfile="code/cppTimer/CppTimerCallback.h" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_cpp_timer_callback_1af6b39f5eb8e98bfc1b301ac3f25276e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void CppTimerCallback::timerEvent</definition>
        <argsstring>()</argsstring>
        <name>timerEvent</name>
        <reimplements refid="class_cpp_timer_1ac2665403595b6aee5f581d0ebfeb886c">timerEvent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract function which needs to be implemented by the children. This is called every time the timer fires. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/CppTimerCallback.h" line="24" column="1" bodyfile="code/cppTimer/CppTimerCallback.h" bodystart="24" bodyend="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="18">
        <label>CppTimerCallback</label>
        <link refid="class_cpp_timer_callback"/>
        <childnode refid="19" relation="public-inheritance">
        </childnode>
      </node>
      <node id="19">
        <label>CppTimer</label>
        <link refid="class_cpp_timer"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="20">
        <label>CppTimerCallback</label>
        <link refid="class_cpp_timer_callback"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>cppTimerEventRunnable</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>CppTimer</label>
        <link refid="class_cpp_timer"/>
      </node>
      <node id="22">
        <label>CppTimerCallback::Runnable</label>
        <link refid="class_cpp_timer_callback_1_1_runnable"/>
      </node>
    </collaborationgraph>
    <location file="code/cppTimer/CppTimerCallback.h" line="8" column="1" bodyfile="code/cppTimer/CppTimerCallback.h" bodystart="8" bodyend="33"/>
    <listofallmembers>
      <member refid="class_cpp_timer_1a327a07c051b9b60fcc61e6fd8f40f381" prot="public" virt="non-virtual"><scope>CppTimerCallback</scope><name>CppTimer</name></member>
      <member refid="class_cpp_timer_callback_1a578cc701cee7be10f3afab2859eac74f" prot="private" virt="non-virtual"><scope>CppTimerCallback</scope><name>cppTimerEventRunnable</name></member>
      <member refid="class_cpp_timer_callback_1ae6e815f1c3b65ea4f10fe0332e13acb9" prot="public" virt="non-virtual"><scope>CppTimerCallback</scope><name>registerEventRunnable</name></member>
      <member refid="class_cpp_timer_1a64989025caa3c030c6c397ca76a2d20b" prot="public" virt="virtual"><scope>CppTimerCallback</scope><name>start</name></member>
      <member refid="class_cpp_timer_1a4bb95ddee98a536d0818b8f6096bf7e7" prot="public" virt="virtual"><scope>CppTimerCallback</scope><name>stop</name></member>
      <member refid="class_cpp_timer_callback_1af6b39f5eb8e98bfc1b301ac3f25276e9" prot="public" virt="virtual"><scope>CppTimerCallback</scope><name>timerEvent</name></member>
      <member refid="class_cpp_timer_callback_1a29d8d5a426a3d15bca8a42c2c897f50f" prot="public" virt="non-virtual"><scope>CppTimerCallback</scope><name>unregisterEventRunnable</name></member>
      <member refid="class_cpp_timer_1a91779a93fce7383a8d832ed481399342" prot="public" virt="virtual"><scope>CppTimerCallback</scope><name>~CppTimer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
