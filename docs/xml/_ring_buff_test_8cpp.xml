<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_ring_buff_test_8cpp" kind="file" language="C++">
    <compoundname>RingBuffTest.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes refid="_ring_buff_8cpp" local="yes">../code/RingBuff.cpp</includes>
    <incdepgraph>
      <node id="431">
        <label>RingBuff.h</label>
        <link refid="_ring_buff_8h"/>
      </node>
      <node id="430">
        <label>../code/RingBuff.cpp</label>
        <link refid="_ring_buff_8cpp"/>
        <childnode refid="431" relation="include">
        </childnode>
      </node>
      <node id="429">
        <label>iostream</label>
      </node>
      <node id="428">
        <label>testfiles/RingBuffTest.cpp</label>
        <link refid="_ring_buff_test_8cpp"/>
        <childnode refid="429" relation="include">
        </childnode>
        <childnode refid="430" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_buff</definition>
        <argsstring>(double *buff, int len)</argsstring>
        <name>print_buff</name>
        <param>
          <type>double *</type>
          <declname>buff</declname>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="testfiles/RingBuffTest.cpp" line="7" column="1" bodyfile="testfiles/RingBuffTest.cpp" bodystart="7" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="_ring_buff_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="testfiles/RingBuffTest.cpp" line="15" column="1" bodyfile="testfiles/RingBuffTest.cpp" bodystart="15" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../code/RingBuff.cpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7" refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>buff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>len;i++){</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>buff[i]<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="_ring_buff_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_ring_buff_test_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_ring_buff" kindref="compound">RingBuff</ref><sp/>delayobj(len);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>1&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>delayobj.insert_sample(1.3);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(delayobj.<ref refid="class_ring_buff_1a94cbd2f64a3f104e4adb0a29c1b1a69c" kindref="member">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>2&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>delayobj.insert_sample(2.1);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(delayobj.<ref refid="class_ring_buff_1a94cbd2f64a3f104e4adb0a29c1b1a69c" kindref="member">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>3&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>delayobj.insert_sample(3.6);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(delayobj.<ref refid="class_ring_buff_1a94cbd2f64a3f104e4adb0a29c1b1a69c" kindref="member">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>4&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>delayobj.insert_sample(4.8);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(delayobj.<ref refid="class_ring_buff_1a94cbd2f64a3f104e4adb0a29c1b1a69c" kindref="member">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;input<sp/>5&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>delayobj.insert_sample(5.4);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(delayobj.<ref refid="class_ring_buff_1a94cbd2f64a3f104e4adb0a29c1b1a69c" kindref="member">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;reset_buffer&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>delayobj.reset_buffer();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_ring_buff_test_8cpp_1ad32668a8d7bc8d97892af5dcda5c2347" kindref="member">print_buff</ref>(delayobj.<ref refid="class_ring_buff_1a94cbd2f64a3f104e4adb0a29c1b1a69c" kindref="member">buffer</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>address:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;<sp/>delayobj.get_buff_address()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;buffer<sp/>length:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>delayobj.get_buff_len()&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="testfiles/RingBuffTest.cpp"/>
  </compounddef>
</doxygen>
