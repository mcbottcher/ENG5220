<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_cpp_timer_8cpp" kind="file" language="C++">
    <compoundname>CppTimer.cpp</compoundname>
    <includes refid="_cpp_timer_8h" local="yes">CppTimer.h</includes>
    <incdepgraph>
      <node id="2">
        <label>stdlib.h</label>
      </node>
      <node id="3">
        <label>unistd.h</label>
      </node>
      <node id="0">
        <label>code/cppTimer/CppTimer.cpp</label>
        <link refid="_cpp_timer_8cpp"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>signal.h</label>
      </node>
      <node id="1">
        <label>CppTimer.h</label>
        <link refid="_cpp_timer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>time.h</label>
      </node>
      <node id="4">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_cpp_timer_8h" kindref="compound">CppTimer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="class_cpp_timer_1a327a07c051b9b60fcc61e6fd8f40f381" refkind="member"><highlight class="normal"><ref refid="class_cpp_timer_1a327a07c051b9b60fcc61e6fd8f40f381" kindref="member">CppTimer::CppTimer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>create<sp/>a<sp/>static<sp/>handler<sp/>catches<sp/>the<sp/>signal<sp/>SIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a692a200df6d2c43b72ff1db76458f09f" kindref="member">sa</ref>.sa_flags<sp/>=<sp/>SA_SIGINFO;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a692a200df6d2c43b72ff1db76458f09f" kindref="member">sa</ref>.sa_sigaction<sp/>=<sp/><ref refid="class_cpp_timer_1a7cf621a640ea9a1e567ee295c7255b5d" kindref="member">handler</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;<ref refid="class_cpp_timer_1a692a200df6d2c43b72ff1db76458f09f" kindref="member">sa</ref>.sa_mask);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sigaction(<ref refid="_cpp_timer_8h_1ad6f1d374549d22100d676d5fcac0a7e5" kindref="member">SIG</ref>,<sp/>&amp;<ref refid="class_cpp_timer_1a692a200df6d2c43b72ff1db76458f09f" kindref="member">sa</ref>,<sp/>NULL)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>signal<sp/>handler&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a9860d3d723ad55982db50c9cde8d725a" kindref="member">sev</ref>.sigev_notify<sp/>=<sp/>SIGEV_SIGNAL;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a9860d3d723ad55982db50c9cde8d725a" kindref="member">sev</ref>.sigev_signo<sp/>=<sp/><ref refid="_cpp_timer_8h_1ad6f1d374549d22100d676d5fcac0a7e5" kindref="member">SIG</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cruical<sp/>is<sp/>that<sp/>the<sp/>signal<sp/>carries<sp/>the<sp/>pointer<sp/>to<sp/>this<sp/>class<sp/>instance<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>because<sp/>the<sp/>handler<sp/>just<sp/>handles<sp/>anything<sp/>that<sp/>comes<sp/>in!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a9860d3d723ad55982db50c9cde8d725a" kindref="member">sev</ref>.sigev_value.sival_ptr<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>the<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer_create(<ref refid="_cpp_timer_8h_1a2694a39dfd1fa087ca6f9f391c91dae7" kindref="member">CLOCKID</ref>,<sp/>&amp;<ref refid="class_cpp_timer_1a9860d3d723ad55982db50c9cde8d725a" kindref="member">sev</ref>,<sp/>&amp;<ref refid="class_cpp_timer_1a90ff764263fdde5a0f6e53429c8cf734" kindref="member">timerid</ref>)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>create<sp/>timer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_cpp_timer_1a64989025caa3c030c6c397ca76a2d20b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cpp_timer_1a64989025caa3c030c6c397ca76a2d20b" kindref="member">CppTimer::start</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nanosecs,<sp/><ref refid="_cpp_timer_8h_1a110d07ab6a96d7815149d3d95435790a" kindref="member">cppTimerType_t</ref><sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(type){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="_cpp_timer_8h_1a110d07ab6a96d7815149d3d95435790aae4379d044711537d9ce3b3b58c575c58" kindref="member">PERIODIC</ref>):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//starts<sp/>after<sp/>specified<sp/>period<sp/>of<sp/>nanoseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_value.tv_sec<sp/>=<sp/>nanosecs<sp/>/<sp/>1000000000;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_value.tv_nsec<sp/>=<sp/>nanosecs<sp/>%<sp/>1000000000;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_interval.tv_sec<sp/>=<sp/>nanosecs<sp/>/<sp/>1000000000;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_interval.tv_nsec<sp/>=<sp/>nanosecs<sp/>%<sp/>1000000000;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">(<ref refid="_cpp_timer_8h_1a110d07ab6a96d7815149d3d95435790aa2724fa87f252403cd2c93f7437f34fd5" kindref="member">ONESHOT</ref>):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fires<sp/>once<sp/>after<sp/>specified<sp/>period<sp/>of<sp/>nanoseconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_value.tv_sec<sp/>=<sp/>nanosecs<sp/>/<sp/>1000000000;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_value.tv_nsec<sp/>=<sp/>nanosecs<sp/>%<sp/>1000000000;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_interval.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>.it_interval.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timer_settime(<ref refid="class_cpp_timer_1a90ff764263fdde5a0f6e53429c8cf734" kindref="member">timerid</ref>,<sp/>0,<sp/>&amp;<ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>,<sp/>NULL)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;Could<sp/>not<sp/>start<sp/>timer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_cpp_timer_1a4bb95ddee98a536d0818b8f6096bf7e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cpp_timer_1a4bb95ddee98a536d0818b8f6096bf7e7" kindref="member">CppTimer::stop</ref>()<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disarm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">itimerspec<sp/>itsnew;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>itsnew.it_value.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>itsnew.it_value.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>itsnew.it_interval.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>itsnew.it_interval.tv_nsec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_settime(<ref refid="class_cpp_timer_1a90ff764263fdde5a0f6e53429c8cf734" kindref="member">timerid</ref>,<sp/>0,<sp/>&amp;itsnew,<sp/>&amp;<ref refid="class_cpp_timer_1a8774fb5ba9af8f276874c1234741f106" kindref="member">its</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="class_cpp_timer_1a91779a93fce7383a8d832ed481399342" refkind="member"><highlight class="normal"><ref refid="class_cpp_timer_1a91779a93fce7383a8d832ed481399342" kindref="member">CppTimer::~CppTimer</ref>()<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cpp_timer_1a4bb95ddee98a536d0818b8f6096bf7e7" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>the<sp/>timer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>timer_delete(<ref refid="class_cpp_timer_1a90ff764263fdde5a0f6e53429c8cf734" kindref="member">timerid</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>action<sp/>for<sp/>signal<sp/>handling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(<ref refid="_cpp_timer_8h_1ad6f1d374549d22100d676d5fcac0a7e5" kindref="member">SIG</ref>,<sp/>SIG_IGN);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="code/cppTimer/CppTimer.cpp"/>
  </compounddef>
</doxygen>
