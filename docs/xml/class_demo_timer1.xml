<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_demo_timer1" kind="class" language="C++" prot="public">
    <compoundname>DemoTimer1</compoundname>
    <basecompoundref refid="class_cpp_timer" prot="public" virt="non-virtual">CppTimer</basecompoundref>
    <basecompoundref refid="class_cpp_timer" prot="public" virt="non-virtual">CppTimer</basecompoundref>
    <basecompoundref refid="class_cpp_timer" prot="public" virt="non-virtual">CppTimer</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_demo_timer1_1a526ea6042483285ffde927a981e60e65" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DemoTimer1::counter</definition>
        <argsstring></argsstring>
        <name>counter</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="20" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_demo_timer1_1a2e9fe735ff1660ab322b11831970f44a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DemoTimer1::timerEvent</definition>
        <argsstring>()</argsstring>
        <name>timerEvent</name>
        <reimplements refid="class_cpp_timer_1ac2665403595b6aee5f581d0ebfeb886c">timerEvent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract function which needs to be implemented by the children. This is called every time the timer fires. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/demo.cpp" line="9" column="1" bodyfile="code/cppTimer/demo.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_demo_timer1_1a2e9fe735ff1660ab322b11831970f44a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DemoTimer1::timerEvent</definition>
        <argsstring>()</argsstring>
        <name>timerEvent</name>
        <reimplements refid="class_cpp_timer_1ac2665403595b6aee5f581d0ebfeb886c">timerEvent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract function which needs to be implemented by the children. This is called every time the timer fires. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/startstop.cpp" line="9" column="1" bodyfile="code/cppTimer/test/startstop.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_demo_timer1_1a2e9fe735ff1660ab322b11831970f44a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DemoTimer1::timerEvent</definition>
        <argsstring>()</argsstring>
        <name>timerEvent</name>
        <reimplements refid="class_cpp_timer_1ac2665403595b6aee5f581d0ebfeb886c">timerEvent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract function which needs to be implemented by the children. This is called every time the timer fires. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="9" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="9" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="class_demo_timer1_1a4e3cd4f0d518ec09bf4dc4b6501392c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DemoTimer1::start</definition>
        <argsstring>(long nanosecs)</argsstring>
        <name>start</name>
        <param>
          <type>long</type>
          <declname>nanosecs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="14" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_demo_timer1_1a4903ef8908e5dccad796f3bbe9c25c60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int DemoTimer1::getCounter</definition>
        <argsstring>()</argsstring>
        <name>getCounter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="18" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="18" bodyend="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="28">
        <label>CppTimer</label>
        <link refid="class_cpp_timer"/>
      </node>
      <node id="27">
        <label>DemoTimer1</label>
        <link refid="class_demo_timer1"/>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
        <childnode refid="28" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="30">
        <label>CppTimer</label>
        <link refid="class_cpp_timer"/>
      </node>
      <node id="29">
        <label>DemoTimer1</label>
        <link refid="class_demo_timer1"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="code/cppTimer/demo.cpp" line="7" column="1" bodyfile="code/cppTimer/demo.cpp" bodystart="7" bodyend="13"/>
    <listofallmembers>
      <member refid="class_demo_timer1_1a526ea6042483285ffde927a981e60e65" prot="private" virt="non-virtual"><scope>DemoTimer1</scope><name>counter</name></member>
      <member refid="class_cpp_timer_1a327a07c051b9b60fcc61e6fd8f40f381" prot="public" virt="non-virtual"><scope>DemoTimer1</scope><name>CppTimer</name></member>
      <member refid="class_demo_timer1_1a4903ef8908e5dccad796f3bbe9c25c60" prot="public" virt="non-virtual"><scope>DemoTimer1</scope><name>getCounter</name></member>
      <member refid="class_demo_timer1_1a4e3cd4f0d518ec09bf4dc4b6501392c3" prot="public" virt="non-virtual"><scope>DemoTimer1</scope><name>start</name></member>
      <member refid="class_cpp_timer_1a64989025caa3c030c6c397ca76a2d20b" prot="public" virt="virtual" ambiguityscope="CppTimer::"><scope>DemoTimer1</scope><name>start</name></member>
      <member refid="class_cpp_timer_1a4bb95ddee98a536d0818b8f6096bf7e7" prot="public" virt="virtual"><scope>DemoTimer1</scope><name>stop</name></member>
      <member refid="class_demo_timer1_1a2e9fe735ff1660ab322b11831970f44a" prot="private" virt="virtual"><scope>DemoTimer1</scope><name>timerEvent</name></member>
      <member refid="class_demo_timer1_1a2e9fe735ff1660ab322b11831970f44a" prot="private" virt="virtual"><scope>DemoTimer1</scope><name>timerEvent</name></member>
      <member refid="class_demo_timer1_1a2e9fe735ff1660ab322b11831970f44a" prot="public" virt="virtual"><scope>DemoTimer1</scope><name>timerEvent</name></member>
      <member refid="class_cpp_timer_1a91779a93fce7383a8d832ed481399342" prot="public" virt="virtual"><scope>DemoTimer1</scope><name>~CppTimer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
