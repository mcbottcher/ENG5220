<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="_m_p_u6050_8cpp" kind="file" language="C++">
    <compoundname>MPU6050.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdint.h</includes>
    <includes refid="_m_p_u6050_8h" local="yes">MPU6050.h</includes>
    <incdepgraph>
      <node id="209">
        <label>stdint.h</label>
      </node>
      <node id="206">
        <label>stdlib.h</label>
      </node>
      <node id="210">
        <label>MPU6050.h</label>
        <link refid="_m_p_u6050_8h"/>
        <childnode refid="211" relation="include">
        </childnode>
      </node>
      <node id="208">
        <label>string.h</label>
      </node>
      <node id="207">
        <label>unistd.h</label>
      </node>
      <node id="211">
        <label>I2Cdev/I2Cdev.h</label>
        <link refid="_m_p_u6050_2_i2_cdev_2_i2_cdev_8h"/>
        <childnode refid="206" relation="include">
        </childnode>
      </node>
      <node id="204">
        <label>code/MPU6050/MPU6050.cpp</label>
        <link refid="_m_p_u6050_8cpp"/>
        <childnode refid="205" relation="include">
        </childnode>
        <childnode refid="206" relation="include">
        </childnode>
        <childnode refid="207" relation="include">
        </childnode>
        <childnode refid="208" relation="include">
        </childnode>
        <childnode refid="209" relation="include">
        </childnode>
        <childnode refid="210" relation="include">
        </childnode>
      </node>
      <node id="205">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>I2Cdev<sp/>library<sp/>collection<sp/>-<sp/>MPU6050<sp/>I2C<sp/>device<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>InvenSense<sp/>MPU-6050<sp/>register<sp/>map<sp/>document<sp/>rev.<sp/>2.0,<sp/>5/19/2011<sp/>(RM-MPU-6000A-00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>8/24/2011<sp/>by<sp/>Jeff<sp/>Rowberg<sp/>&lt;jeff@rowberg.net&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Updates<sp/>should<sp/>(hopefully)<sp/>always<sp/>be<sp/>available<sp/>at<sp/>https://github.com/jrowberg/i2cdevlib</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Changelog:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>...<sp/>-<sp/>ongoing<sp/>debug<sp/>release</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>NOTE:<sp/>THIS<sp/>IS<sp/>ONLY<sp/>A<sp/>PARIAL<sp/>RELEASE.<sp/>THIS<sp/>DEVICE<sp/>CLASS<sp/>IS<sp/>CURRENTLY<sp/>UNDERGOING<sp/>ACTIVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DEVELOPMENT<sp/>AND<sp/>IS<sp/>STILL<sp/>MISSING<sp/>SOME<sp/>IMPORTANT<sp/>FEATURES.<sp/>PLEASE<sp/>KEEP<sp/>THIS<sp/>IN<sp/>MIND<sp/>IF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>YOU<sp/>DECIDE<sp/>TO<sp/>USE<sp/>THIS<sp/>PARTICULAR<sp/>CODE<sp/>FOR<sp/>ANYTHING.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>============================================</highlight></codeline>
<codeline lineno="14"><highlight class="comment">I2Cdev<sp/>device<sp/>library<sp/>code<sp/>is<sp/>placed<sp/>under<sp/>the<sp/>MIT<sp/>license</highlight></codeline>
<codeline lineno="15"><highlight class="comment">Copyright<sp/>(c)<sp/>2012<sp/>Jeff<sp/>Rowberg</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="18"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="19"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="20"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="21"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="22"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="23"><highlight class="comment"></highlight></codeline>
<codeline lineno="24"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in</highlight></codeline>
<codeline lineno="25"><highlight class="comment">all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight></codeline>
<codeline lineno="27"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="28"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="29"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="30"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="31"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="32"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN</highlight></codeline>
<codeline lineno="33"><highlight class="comment">THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="34"><highlight class="comment">===============================================</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_p_u6050_8h" kindref="compound">MPU6050.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_m_p_u6050_1a7c0146d45537e4bd7a0d4c1c476fdab7" refkind="member"><highlight class="normal"><ref refid="class_m_p_u6050_1a7c0146d45537e4bd7a0d4c1c476fdab7" kindref="member">MPU6050::MPU6050</ref>()<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref><sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae5cf60bf2cbc13d21384c215c4f05149" kindref="member">MPU6050_DEFAULT_ADDRESS</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="class_m_p_u6050_1a94df4ec1565317ba5279122b3bf7e056" refkind="member"><highlight class="normal"><ref refid="class_m_p_u6050_1a7c0146d45537e4bd7a0d4c1c476fdab7" kindref="member">MPU6050::MPU6050</ref>(uint8_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref><sp/>=<sp/>address;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="class_m_p_u6050_1abd8fc6c18adf158011118fbccc7e7054" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1abd8fc6c18adf158011118fbccc7e7054" kindref="member">MPU6050::initialize</ref>()<sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a4c1cd147d038e024bdeaa053c4d77734" kindref="member">setClockSource</ref>(<ref refid="_m_p_u6050_8h_1a3c240f7062a547fee82e419b565e440e" kindref="member">MPU6050_CLOCK_PLL_XGYRO</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a72afc0b6f221c9336f635b5637c62dae" kindref="member">setFullScaleGyroRange</ref>(<ref refid="_m_p_u6050_8h_1aac5b35a3fa5792b38fe7118bc72fb442" kindref="member">MPU6050_GYRO_FS_250</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a64eb78e8e359c541beaf8664db3421d1" kindref="member">setFullScaleAccelRange</ref>(<ref refid="_m_p_u6050_8h_1aeb63b8456cc4d715ce1fbe29ca5b1722" kindref="member">MPU6050_ACCEL_FS_2</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a15ec5f8e7daf235f507c1d8b96af051a" kindref="member">setSleepEnabled</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>thanks<sp/>to<sp/>Jack<sp/>Elston<sp/>for<sp/>pointing<sp/>this<sp/>one<sp/>out!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_m_p_u6050_1a95ffab7b44fce3834236e0813687d11a" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a95ffab7b44fce3834236e0813687d11a" kindref="member">MPU6050::testConnection</ref>()<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a35ae3c8894b3258e642043886801e031" kindref="member">getDeviceID</ref>()<sp/>==<sp/>0x34;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AUX_VDDIO<sp/>register<sp/>(InvenSense<sp/>demo<sp/>code<sp/>calls<sp/>this<sp/>RA_*G_OFFS_TC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_m_p_u6050_1af6e9af8e2222889fd5458e2ae12c55c8" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1af6e9af8e2222889fd5458e2ae12c55c8" kindref="member">MPU6050::getAuxVDDIOLevel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a45060dc0c7bdd30589a081dbe4d43b98" kindref="member">MPU6050_RA_YG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a0f89d8196e6739bb626d92cba3a96628" kindref="member">MPU6050_TC_PWR_MODE_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101" refid="class_m_p_u6050_1a7c666c20e26869bc80646f1b2c3d69bc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7c666c20e26869bc80646f1b2c3d69bc" kindref="member">MPU6050::setAuxVDDIOLevel</ref>(uint8_t<sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a45060dc0c7bdd30589a081dbe4d43b98" kindref="member">MPU6050_RA_YG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a0f89d8196e6739bb626d92cba3a96628" kindref="member">MPU6050_TC_PWR_MODE_BIT</ref>,<sp/>level);</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SMPLRT_DIV<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_m_p_u6050_1a887a173e079980505763ffd1aa9fec05" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a887a173e079980505763ffd1aa9fec05" kindref="member">MPU6050::getRate</ref>()<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a12d24140bc78ba2db5a2e11ab32abeda" kindref="member">MPU6050_RA_SMPLRT_DIV</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137" refid="class_m_p_u6050_1a7d03801d6b656e8e12cd3c1dd97824a8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7d03801d6b656e8e12cd3c1dd97824a8" kindref="member">MPU6050::setRate</ref>(uint8_t<sp/>rate)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a12d24140bc78ba2db5a2e11ab32abeda" kindref="member">MPU6050_RA_SMPLRT_DIV</ref>,<sp/>rate);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CONFIG<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="class_m_p_u6050_1a902a7d486cd6ac21f8c378634dc6f59a" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a902a7d486cd6ac21f8c378634dc6f59a" kindref="member">MPU6050::getExternalFrameSync</ref>()<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a51c78b27e0368d91c94209dbeca4df90" kindref="member">MPU6050_RA_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a495a67e684c7c6922d55518f613a40ee" kindref="member">MPU6050_CFG_EXT_SYNC_SET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a31cfa0ed00f2a10dc5e136d63c25348d" kindref="member">MPU6050_CFG_EXT_SYNC_SET_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179" refid="class_m_p_u6050_1a77b36f41c531a11b5a835fc75a9aefe6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a77b36f41c531a11b5a835fc75a9aefe6" kindref="member">MPU6050::setExternalFrameSync</ref>(uint8_t<sp/>sync)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a51c78b27e0368d91c94209dbeca4df90" kindref="member">MPU6050_RA_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a495a67e684c7c6922d55518f613a40ee" kindref="member">MPU6050_CFG_EXT_SYNC_SET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a31cfa0ed00f2a10dc5e136d63c25348d" kindref="member">MPU6050_CFG_EXT_SYNC_SET_LENGTH</ref>,<sp/>sync);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210" refid="class_m_p_u6050_1a9f2737fe22955fd85b2575ba8da874c6" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a9f2737fe22955fd85b2575ba8da874c6" kindref="member">MPU6050::getDLPFMode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a51c78b27e0368d91c94209dbeca4df90" kindref="member">MPU6050_RA_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1adf909a696e2ebf9ba3dba9570ae02af2" kindref="member">MPU6050_CFG_DLPF_CFG_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a119feeb54b957c50e0beba3f6aa2458f" kindref="member">MPU6050_CFG_DLPF_CFG_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222" refid="class_m_p_u6050_1a7a782ade8af2f88dfef7171487f59a3b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7a782ade8af2f88dfef7171487f59a3b" kindref="member">MPU6050::setDLPFMode</ref>(uint8_t<sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a51c78b27e0368d91c94209dbeca4df90" kindref="member">MPU6050_RA_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1adf909a696e2ebf9ba3dba9570ae02af2" kindref="member">MPU6050_CFG_DLPF_CFG_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a119feeb54b957c50e0beba3f6aa2458f" kindref="member">MPU6050_CFG_DLPF_CFG_LENGTH</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GYRO_CONFIG<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="class_m_p_u6050_1acb1fa088d43d76230106a3226f343013" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1acb1fa088d43d76230106a3226f343013" kindref="member">MPU6050::getFullScaleGyroRange</ref>()<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a004871ad77398075d79e9111989007dc" kindref="member">MPU6050_RA_GYRO_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1afd6d2bc756768007166a6c3941569c80" kindref="member">MPU6050_GCONFIG_FS_SEL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9ffad45588f9e6c49842bbe8c57335f6" kindref="member">MPU6050_GCONFIG_FS_SEL_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257" refid="class_m_p_u6050_1a72afc0b6f221c9336f635b5637c62dae" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a72afc0b6f221c9336f635b5637c62dae" kindref="member">MPU6050::setFullScaleGyroRange</ref>(uint8_t<sp/>range)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a004871ad77398075d79e9111989007dc" kindref="member">MPU6050_RA_GYRO_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1afd6d2bc756768007166a6c3941569c80" kindref="member">MPU6050_GCONFIG_FS_SEL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9ffad45588f9e6c49842bbe8c57335f6" kindref="member">MPU6050_GCONFIG_FS_SEL_LENGTH</ref>,<sp/>range);</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ACCEL_CONFIG<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="class_m_p_u6050_1a8fc7eab1302281f6e4bc953379f3237b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a8fc7eab1302281f6e4bc953379f3237b" kindref="member">MPU6050::getAccelXSelfTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a03f95a0f712cf6d405647f8b3e904969" kindref="member">MPU6050_ACONFIG_XA_ST_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275" refid="class_m_p_u6050_1ac2ab843dc9d241056ed0f891195cdbf9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ac2ab843dc9d241056ed0f891195cdbf9" kindref="member">MPU6050::setAccelXSelfTest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a03f95a0f712cf6d405647f8b3e904969" kindref="member">MPU6050_ACONFIG_XA_ST_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282" refid="class_m_p_u6050_1a2523e798db3baf9cb9dbf347af16639b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2523e798db3baf9cb9dbf347af16639b" kindref="member">MPU6050::getAccelYSelfTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1abe3a731e58d6fd5df31c7b83226fd22d" kindref="member">MPU6050_ACONFIG_YA_ST_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290" refid="class_m_p_u6050_1ad5847430ab297959e4d0e9b81ba2e3ba" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad5847430ab297959e4d0e9b81ba2e3ba" kindref="member">MPU6050::setAccelYSelfTest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1abe3a731e58d6fd5df31c7b83226fd22d" kindref="member">MPU6050_ACONFIG_YA_ST_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297" refid="class_m_p_u6050_1a57710638eeb6176cf14a8c444bda5300" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a57710638eeb6176cf14a8c444bda5300" kindref="member">MPU6050::getAccelZSelfTest</ref>()<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4bb3480dc64752518ccb62d1bb3cd258" kindref="member">MPU6050_ACONFIG_ZA_ST_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305" refid="class_m_p_u6050_1a8eb8ba039af9a47e0475a3835b87f404" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a8eb8ba039af9a47e0475a3835b87f404" kindref="member">MPU6050::setAccelZSelfTest</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4bb3480dc64752518ccb62d1bb3cd258" kindref="member">MPU6050_ACONFIG_ZA_ST_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325" refid="class_m_p_u6050_1a0fe2dad60c170cee7d614e08f243ffd0" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a0fe2dad60c170cee7d614e08f243ffd0" kindref="member">MPU6050::getFullScaleAccelRange</ref>()<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a86a744acedbe8a5ec7c82792e050d911" kindref="member">MPU6050_ACONFIG_AFS_SEL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac2d0f6933b5cee0ffe5bc049eb54536f" kindref="member">MPU6050_ACONFIG_AFS_SEL_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333" refid="class_m_p_u6050_1a64eb78e8e359c541beaf8664db3421d1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a64eb78e8e359c541beaf8664db3421d1" kindref="member">MPU6050::setFullScaleAccelRange</ref>(uint8_t<sp/>range)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a86a744acedbe8a5ec7c82792e050d911" kindref="member">MPU6050_ACONFIG_AFS_SEL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac2d0f6933b5cee0ffe5bc049eb54536f" kindref="member">MPU6050_ACONFIG_AFS_SEL_LENGTH</ref>,<sp/>range);</highlight></codeline>
<codeline lineno="335"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371" refid="class_m_p_u6050_1a4c3b84a906fcb5a65870fa557f797f4a" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a4c3b84a906fcb5a65870fa557f797f4a" kindref="member">MPU6050::getDHPFMode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3093502ef7b7c123c2602a736431a1bb" kindref="member">MPU6050_ACONFIG_ACCEL_HPF_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3b446c27de2d733443376c87bf2b00a8" kindref="member">MPU6050_ACONFIG_ACCEL_HPF_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381" refid="class_m_p_u6050_1a44cc43aaad1e52c1ba3142d4490af611" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a44cc43aaad1e52c1ba3142d4490af611" kindref="member">MPU6050::setDHPFMode</ref>(uint8_t<sp/>bandwidth)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48b7d7b24a70b247e373bc5965a5dcc7" kindref="member">MPU6050_RA_ACCEL_CONFIG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3093502ef7b7c123c2602a736431a1bb" kindref="member">MPU6050_ACONFIG_ACCEL_HPF_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3b446c27de2d733443376c87bf2b00a8" kindref="member">MPU6050_ACONFIG_ACCEL_HPF_LENGTH</ref>,<sp/>bandwidth);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FF_THR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="class_m_p_u6050_1ac7f5c0511fe9d0f3525a3757498daed7" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1ac7f5c0511fe9d0f3525a3757498daed7" kindref="member">MPU6050::getFreefallDetectionThreshold</ref>()<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a391a4a95c33895c6926b9459cea5f3cd" kindref="member">MPU6050_RA_FF_THR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411" refid="class_m_p_u6050_1af704e1a4eb01522b146abeba78c32716" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af704e1a4eb01522b146abeba78c32716" kindref="member">MPU6050::setFreefallDetectionThreshold</ref>(uint8_t<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a391a4a95c33895c6926b9459cea5f3cd" kindref="member">MPU6050_RA_FF_THR</ref>,<sp/>threshold);</highlight></codeline>
<codeline lineno="413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FF_DUR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="434" refid="class_m_p_u6050_1a3cff6b9613ad01aa1a51c287f5c5e329" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a3cff6b9613ad01aa1a51c287f5c5e329" kindref="member">MPU6050::getFreefallDetectionDuration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aaf242278f1dd87556bdeeab589b01fd7" kindref="member">MPU6050_RA_FF_DUR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="443" refid="class_m_p_u6050_1a41eeb40a654465966d260e3d31c4de4b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a41eeb40a654465966d260e3d31c4de4b" kindref="member">MPU6050::setFreefallDetectionDuration</ref>(uint8_t<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aaf242278f1dd87556bdeeab589b01fd7" kindref="member">MPU6050_RA_FF_DUR</ref>,<sp/>duration);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MOT_THR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="class_m_p_u6050_1ab7a825b1b8b86cebda308289630795e7" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1ab7a825b1b8b86cebda308289630795e7" kindref="member">MPU6050::getMotionDetectionThreshold</ref>()<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a444c7d6d710bcc30f1ad98f703f9921e" kindref="member">MPU6050_RA_MOT_THR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477" refid="class_m_p_u6050_1aa23c8d66502345c30915e69975fd2cc9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aa23c8d66502345c30915e69975fd2cc9" kindref="member">MPU6050::setMotionDetectionThreshold</ref>(uint8_t<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a444c7d6d710bcc30f1ad98f703f9921e" kindref="member">MPU6050_RA_MOT_THR</ref>,<sp/>threshold);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MOT_DUR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="498" refid="class_m_p_u6050_1a8ba035c2ae4a05d7e51b0d29e4924fb0" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a8ba035c2ae4a05d7e51b0d29e4924fb0" kindref="member">MPU6050::getMotionDetectionDuration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a25ce9fe346237d22b62881257458fdf4" kindref="member">MPU6050_RA_MOT_DUR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507" refid="class_m_p_u6050_1a6d81616aaa47539217057891c91ff08f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6d81616aaa47539217057891c91ff08f" kindref="member">MPU6050::setMotionDetectionDuration</ref>(uint8_t<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a25ce9fe346237d22b62881257458fdf4" kindref="member">MPU6050_RA_MOT_DUR</ref>,<sp/>duration);</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ZRMOT_THR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="class_m_p_u6050_1ad941c1e844dc9230675c115734599ea3" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1ad941c1e844dc9230675c115734599ea3" kindref="member">MPU6050::getZeroMotionDetectionThreshold</ref>()<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a866eb43544165dc8c777d82bab9860e6" kindref="member">MPU6050_RA_ZRMOT_THR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547" refid="class_m_p_u6050_1a347a51fd25de20b9ead4659015ef793b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a347a51fd25de20b9ead4659015ef793b" kindref="member">MPU6050::setZeroMotionDetectionThreshold</ref>(uint8_t<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a866eb43544165dc8c777d82bab9860e6" kindref="member">MPU6050_RA_ZRMOT_THR</ref>,<sp/>threshold);</highlight></codeline>
<codeline lineno="549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ZRMOT_DUR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="569" refid="class_m_p_u6050_1a04c0fcdcd0157b6dbf74d4901424801e" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a04c0fcdcd0157b6dbf74d4901424801e" kindref="member">MPU6050::getZeroMotionDetectionDuration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a57ad8b9e0c77ec27d41b60405ab57e1c" kindref="member">MPU6050_RA_ZRMOT_DUR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="572"><highlight class="normal">}</highlight></codeline>
<codeline lineno="578" refid="class_m_p_u6050_1a6d25a21e1673682f096399b719c66d2c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6d25a21e1673682f096399b719c66d2c" kindref="member">MPU6050::setZeroMotionDetectionDuration</ref>(uint8_t<sp/>duration)<sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a57ad8b9e0c77ec27d41b60405ab57e1c" kindref="member">MPU6050_RA_ZRMOT_DUR</ref>,<sp/>duration);</highlight></codeline>
<codeline lineno="580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIFO_EN<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="class_m_p_u6050_1a913c2095001e204b5b09f8382a86d2ca" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a913c2095001e204b5b09f8382a86d2ca" kindref="member">MPU6050::getTempFIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a817ed1eb65de563dceb35fed3e2ebd08" kindref="member">MPU6050_TEMP_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599" refid="class_m_p_u6050_1ae528a25b4997ad0e3091a012e4e4419e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae528a25b4997ad0e3091a012e4e4419e" kindref="member">MPU6050::setTempFIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a817ed1eb65de563dceb35fed3e2ebd08" kindref="member">MPU6050_TEMP_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="608" refid="class_m_p_u6050_1ada9a553176b57815f23fb7d71bb85c9d" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ada9a553176b57815f23fb7d71bb85c9d" kindref="member">MPU6050::getXGyroFIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1aabcf0707489b9a812f1a061644918bcf" kindref="member">MPU6050_XG_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617" refid="class_m_p_u6050_1a53a03d1f255a62f01375c870cdc85767" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a53a03d1f255a62f01375c870cdc85767" kindref="member">MPU6050::setXGyroFIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1aabcf0707489b9a812f1a061644918bcf" kindref="member">MPU6050_XG_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626" refid="class_m_p_u6050_1a86c85d5b5c93df82394435b868e17463" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a86c85d5b5c93df82394435b868e17463" kindref="member">MPU6050::getYGyroFIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1f1c02b773d610b316c91fa93d06598a" kindref="member">MPU6050_YG_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635" refid="class_m_p_u6050_1a16eb12bbf07bc17a9d852941d834175e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a16eb12bbf07bc17a9d852941d834175e" kindref="member">MPU6050::setYGyroFIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1f1c02b773d610b316c91fa93d06598a" kindref="member">MPU6050_YG_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644" refid="class_m_p_u6050_1adbbbd131c74f37dd545403633eb317ff" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1adbbbd131c74f37dd545403633eb317ff" kindref="member">MPU6050::getZGyroFIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a14806887f28db8ea569f25651a2699d4" kindref="member">MPU6050_ZG_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653" refid="class_m_p_u6050_1af5b5bc39b66466ba910f6eef1259444c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af5b5bc39b66466ba910f6eef1259444c" kindref="member">MPU6050::setZGyroFIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a14806887f28db8ea569f25651a2699d4" kindref="member">MPU6050_ZG_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="655"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663" refid="class_m_p_u6050_1ace244415128ad7a38293ad6808b7face" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ace244415128ad7a38293ad6808b7face" kindref="member">MPU6050::getAccelFIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3b2263e85c479475b12c39e6ab913258" kindref="member">MPU6050_ACCEL_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672" refid="class_m_p_u6050_1afccbee85f5cdc95098f6d62d8d417c3f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1afccbee85f5cdc95098f6d62d8d417c3f" kindref="member">MPU6050::setAccelFIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3b2263e85c479475b12c39e6ab913258" kindref="member">MPU6050_ACCEL_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="674"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681" refid="class_m_p_u6050_1a3c2e29508607a655221a2fa4f4219b4d" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3c2e29508607a655221a2fa4f4219b4d" kindref="member">MPU6050::getSlave2FIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1c1f4767669a4b78fc545515ad40daf6" kindref="member">MPU6050_SLV2_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690" refid="class_m_p_u6050_1a38a10ac4f30b96718ec021dc0db8587b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a38a10ac4f30b96718ec021dc0db8587b" kindref="member">MPU6050::setSlave2FIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1c1f4767669a4b78fc545515ad40daf6" kindref="member">MPU6050_SLV2_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="699" refid="class_m_p_u6050_1afd6a9b55a589c83c9a0fb0b5b2a88234" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1afd6a9b55a589c83c9a0fb0b5b2a88234" kindref="member">MPU6050::getSlave1FIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1aff048ca52f7c8a412c0e6c820d4cf1cf" kindref="member">MPU6050_SLV1_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="708" refid="class_m_p_u6050_1a5d432fa2fb8b2227f50aa5c7b5befb66" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a5d432fa2fb8b2227f50aa5c7b5befb66" kindref="member">MPU6050::setSlave1FIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1aff048ca52f7c8a412c0e6c820d4cf1cf" kindref="member">MPU6050_SLV1_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717" refid="class_m_p_u6050_1a6aa7aa2e3fac06f8b5ab9ee127255a5e" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6aa7aa2e3fac06f8b5ab9ee127255a5e" kindref="member">MPU6050::getSlave0FIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a805428e54c987a4c759bcafaa2b56018" kindref="member">MPU6050_SLV0_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726" refid="class_m_p_u6050_1a97fbf27e1b827f9dfc3c28ff376b54c4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a97fbf27e1b827f9dfc3c28ff376b54c4" kindref="member">MPU6050::setSlave0FIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1166fe50f4792f3266e15dc3273e375d" kindref="member">MPU6050_RA_FIFO_EN</ref>,<sp/><ref refid="_m_p_u6050_8h_1a805428e54c987a4c759bcafaa2b56018" kindref="member">MPU6050_SLV0_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C_MST_CTRL<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="class_m_p_u6050_1aa88483068837bd9bc9c9f6c59a7a79b7" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aa88483068837bd9bc9c9f6c59a7a79b7" kindref="member">MPU6050::getMultiMasterEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a04375cc27ef0b67acb5672a3d6618be1" kindref="member">MPU6050_MULT_MST_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756" refid="class_m_p_u6050_1a039f5724974c5bf3f373ed9be031441c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a039f5724974c5bf3f373ed9be031441c" kindref="member">MPU6050::setMultiMasterEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a04375cc27ef0b67acb5672a3d6618be1" kindref="member">MPU6050_MULT_MST_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770" refid="class_m_p_u6050_1a4e2ebda47b85b4c5463f041c790bf5c0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a4e2ebda47b85b4c5463f041c790bf5c0" kindref="member">MPU6050::getWaitForExternalSensorEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8a99b8cc4dd5b1e59ab9238a7c0ea583" kindref="member">MPU6050_WAIT_FOR_ES_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779" refid="class_m_p_u6050_1a20dc4bdedbe1550580c28a6d090291be" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a20dc4bdedbe1550580c28a6d090291be" kindref="member">MPU6050::setWaitForExternalSensorEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8a99b8cc4dd5b1e59ab9238a7c0ea583" kindref="member">MPU6050_WAIT_FOR_ES_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="788" refid="class_m_p_u6050_1a9d75ec63e2320ecfb84a2b082397f900" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a9d75ec63e2320ecfb84a2b082397f900" kindref="member">MPU6050::getSlave3FIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1acb5e5b4b301da1c7cacef2130c9de698" kindref="member">MPU6050_SLV_3_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797" refid="class_m_p_u6050_1a6ed713870c7f6d085ded91a45515a36c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6ed713870c7f6d085ded91a45515a36c" kindref="member">MPU6050::setSlave3FIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1acb5e5b4b301da1c7cacef2130c9de698" kindref="member">MPU6050_SLV_3_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810" refid="class_m_p_u6050_1a6b3c3aab80fcaa384303f9df2a59d7eb" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6b3c3aab80fcaa384303f9df2a59d7eb" kindref="member">MPU6050::getSlaveReadWriteTransitionEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4fe21728b1fd788f207cd4fe26288a95" kindref="member">MPU6050_I2C_MST_P_NSR_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819" refid="class_m_p_u6050_1a3413efbf2f4e8a27aa8768d9bc34d663" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3413efbf2f4e8a27aa8768d9bc34d663" kindref="member">MPU6050::setSlaveReadWriteTransitionEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4fe21728b1fd788f207cd4fe26288a95" kindref="member">MPU6050_I2C_MST_P_NSR_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="851" refid="class_m_p_u6050_1a4cda448ef5c5736bd14188947342d636" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a4cda448ef5c5736bd14188947342d636" kindref="member">MPU6050::getMasterClockSpeed</ref>()<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a326b4f2642ef6bf83ea31ad802aaeec5" kindref="member">MPU6050_I2C_MST_CLK_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a000953c1d01b201a9d812594fadac87b" kindref="member">MPU6050_I2C_MST_CLK_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859" refid="class_m_p_u6050_1a8a4779ea709ff0633f9798369478400b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a8a4779ea709ff0633f9798369478400b" kindref="member">MPU6050::setMasterClockSpeed</ref>(uint8_t<sp/>speed)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae4804708dd5f21dbca1ff1815b883504" kindref="member">MPU6050_RA_I2C_MST_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a326b4f2642ef6bf83ea31ad802aaeec5" kindref="member">MPU6050_I2C_MST_CLK_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a000953c1d01b201a9d812594fadac87b" kindref="member">MPU6050_I2C_MST_CLK_LENGTH</ref>,<sp/>speed);</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C_SLV*<sp/>registers<sp/>(Slave<sp/>0-3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="class_m_p_u6050_1af75b9f7ccac48515c7544238db0e6863" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1af75b9f7ccac48515c7544238db0e6863" kindref="member">MPU6050::getSlaveAddress</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a423463fce914683217f05e3ca686364c" kindref="member">MPU6050_RA_I2C_SLV0_ADDR</ref><sp/>+<sp/>num*3,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917" refid="class_m_p_u6050_1a3c07eb2c59fff3ddc7186319ee40ba6f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3c07eb2c59fff3ddc7186319ee40ba6f" kindref="member">MPU6050::setSlaveAddress</ref>(uint8_t<sp/>num,<sp/>uint8_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a423463fce914683217f05e3ca686364c" kindref="member">MPU6050_RA_I2C_SLV0_ADDR</ref><sp/>+<sp/>num*3,<sp/>address);</highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="932" refid="class_m_p_u6050_1ae7e9ead9645bcef326eb579c6ab5d5ff" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1ae7e9ead9645bcef326eb579c6ab5d5ff" kindref="member">MPU6050::getSlaveRegister</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae9fc1bc0eb0c568846328de91127ca80" kindref="member">MPU6050_RA_I2C_SLV0_REG</ref><sp/>+<sp/>num*3,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="936"><highlight class="normal">}</highlight></codeline>
<codeline lineno="943" refid="class_m_p_u6050_1a62851e982059a2462d52c210ad764a1c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a62851e982059a2462d52c210ad764a1c" kindref="member">MPU6050::setSlaveRegister</ref>(uint8_t<sp/>num,<sp/>uint8_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae9fc1bc0eb0c568846328de91127ca80" kindref="member">MPU6050_RA_I2C_SLV0_REG</ref><sp/>+<sp/>num*3,<sp/>reg);</highlight></codeline>
<codeline lineno="946"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954" refid="class_m_p_u6050_1a5f14bde83fe00b27dec6776fc44e89c2" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a5f14bde83fe00b27dec6776fc44e89c2" kindref="member">MPU6050::getSlaveEnabled</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a063a1cfe7425c65cfdf9f3ca90871770" kindref="member">MPU6050_I2C_SLV_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965" refid="class_m_p_u6050_1afaffa021d7bb41f3a288827080602eee" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1afaffa021d7bb41f3a288827080602eee" kindref="member">MPU6050::setSlaveEnabled</ref>(uint8_t<sp/>num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a063a1cfe7425c65cfdf9f3ca90871770" kindref="member">MPU6050_I2C_SLV_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="980" refid="class_m_p_u6050_1a18e8f3d053a68f0e5ecf497c87ecac8a" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a18e8f3d053a68f0e5ecf497c87ecac8a" kindref="member">MPU6050::getSlaveWordByteSwap</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a6c67014f4d0b0c2b20b7f5de816cf16c" kindref="member">MPU6050_I2C_SLV_BYTE_SW_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991" refid="class_m_p_u6050_1abeb1f83652066d7543fd3283af794364" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1abeb1f83652066d7543fd3283af794364" kindref="member">MPU6050::setSlaveWordByteSwap</ref>(uint8_t<sp/>num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a6c67014f4d0b0c2b20b7f5de816cf16c" kindref="member">MPU6050_I2C_SLV_BYTE_SW_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005" refid="class_m_p_u6050_1adb99955fa66300b1f0bedfcdd8187412" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1adb99955fa66300b1f0bedfcdd8187412" kindref="member">MPU6050::getSlaveWriteMode</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a673cc147c62400d23d1f543d9c2840f0" kindref="member">MPU6050_I2C_SLV_REG_DIS_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016" refid="class_m_p_u6050_1a3d9bfcb5394c7a382009cd2dc91ce801" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3d9bfcb5394c7a382009cd2dc91ce801" kindref="member">MPU6050::setSlaveWriteMode</ref>(uint8_t<sp/>num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a673cc147c62400d23d1f543d9c2840f0" kindref="member">MPU6050_I2C_SLV_REG_DIS_BIT</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031" refid="class_m_p_u6050_1a32ce8023bb80afc5d55811de70c7214f" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a32ce8023bb80afc5d55811de70c7214f" kindref="member">MPU6050::getSlaveWordGroupOffset</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1adbd9e3c1c2b8979f9e38ef4815a8b426" kindref="member">MPU6050_I2C_SLV_GRP_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1042" refid="class_m_p_u6050_1a32602ab86f70b70d3313628fc6c010ae" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a32602ab86f70b70d3313628fc6c010ae" kindref="member">MPU6050::setSlaveWordGroupOffset</ref>(uint8_t<sp/>num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1adbd9e3c1c2b8979f9e38ef4815a8b426" kindref="member">MPU6050_I2C_SLV_GRP_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053" refid="class_m_p_u6050_1a54c2a48b3cb79106bcaf75accf6cd311" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a54c2a48b3cb79106bcaf75accf6cd311" kindref="member">MPU6050::getSlaveDataLength</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a0f9622a82b552e2272079690d603829b" kindref="member">MPU6050_I2C_SLV_LEN_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a217150e945314ff816e18da341f722df" kindref="member">MPU6050_I2C_SLV_LEN_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1064" refid="class_m_p_u6050_1ab4151353f433c533246d938fc3b78458" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ab4151353f433c533246d938fc3b78458" kindref="member">MPU6050::setSlaveDataLength</ref>(uint8_t<sp/>num,<sp/>uint8_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a70ce4d71982a1e3fb2be9b71f40da786" kindref="member">MPU6050_RA_I2C_SLV0_CTRL</ref><sp/>+<sp/>num*3,<sp/><ref refid="_m_p_u6050_8h_1a0f9622a82b552e2272079690d603829b" kindref="member">MPU6050_I2C_SLV_LEN_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a217150e945314ff816e18da341f722df" kindref="member">MPU6050_I2C_SLV_LEN_LENGTH</ref>,<sp/>length);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C_SLV*<sp/>registers<sp/>(Slave<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="class_m_p_u6050_1a4278dec5fec25be9a6f45b51a3373ad2" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a4278dec5fec25be9a6f45b51a3373ad2" kindref="member">MPU6050::getSlave4Address</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3a3a4854870a5f354e50fbc4eae196c0" kindref="member">MPU6050_RA_I2C_SLV4_ADDR</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1089" refid="class_m_p_u6050_1a6985da2cbc37be3fefbe3c16bf8d34a6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6985da2cbc37be3fefbe3c16bf8d34a6" kindref="member">MPU6050::setSlave4Address</ref>(uint8_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3a3a4854870a5f354e50fbc4eae196c0" kindref="member">MPU6050_RA_I2C_SLV4_ADDR</ref>,<sp/>address);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1099" refid="class_m_p_u6050_1a7bd548cb60ecceb27c72f026ec0a60f8" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a7bd548cb60ecceb27c72f026ec0a60f8" kindref="member">MPU6050::getSlave4Register</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b2f24136f2f68b5d42652d16208d9d0" kindref="member">MPU6050_RA_I2C_SLV4_REG</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108" refid="class_m_p_u6050_1ae54dc358da048e61a1ac68012300fdaa" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae54dc358da048e61a1ac68012300fdaa" kindref="member">MPU6050::setSlave4Register</ref>(uint8_t<sp/>reg)<sp/>{</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b2f24136f2f68b5d42652d16208d9d0" kindref="member">MPU6050_RA_I2C_SLV4_REG</ref>,<sp/>reg);</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117" refid="class_m_p_u6050_1a17147a6f477be79f58889e9e6329392f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a17147a6f477be79f58889e9e6329392f" kindref="member">MPU6050::setSlave4OutputByte</ref>(uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a433e4202ff24b4d90e695d5154a6f9eb" kindref="member">MPU6050_RA_I2C_SLV4_DO</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1126" refid="class_m_p_u6050_1a4b9e13d6776ba99e042773873557bedd" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a4b9e13d6776ba99e042773873557bedd" kindref="member">MPU6050::getSlave4Enabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1aba35d05653ef49e0e43903306406a774" kindref="member">MPU6050_I2C_SLV4_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135" refid="class_m_p_u6050_1a04be2a8c3af6ef174f97769b9b5164a9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a04be2a8c3af6ef174f97769b9b5164a9" kindref="member">MPU6050::setSlave4Enabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1aba35d05653ef49e0e43903306406a774" kindref="member">MPU6050_I2C_SLV4_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1147" refid="class_m_p_u6050_1a051549bcfa2eeb848c8557fc3efe74da" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a051549bcfa2eeb848c8557fc3efe74da" kindref="member">MPU6050::getSlave4InterruptEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a268e7470796885d36d1d03eb0aac43ee" kindref="member">MPU6050_I2C_SLV4_INT_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1156" refid="class_m_p_u6050_1a7d7498ebc26f8a1fe8c9dcf40cd5d265" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7d7498ebc26f8a1fe8c9dcf40cd5d265" kindref="member">MPU6050::setSlave4InterruptEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a268e7470796885d36d1d03eb0aac43ee" kindref="member">MPU6050_I2C_SLV4_INT_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1168" refid="class_m_p_u6050_1a8d5a5e73907c78960154b92656127372" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a8d5a5e73907c78960154b92656127372" kindref="member">MPU6050::getSlave4WriteMode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a7325cf589adff245ca1330e928f12d6f" kindref="member">MPU6050_I2C_SLV4_REG_DIS_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1177" refid="class_m_p_u6050_1af1402fe7f3e1cc0dedb6714351cbca4e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af1402fe7f3e1cc0dedb6714351cbca4e" kindref="member">MPU6050::setSlave4WriteMode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a7325cf589adff245ca1330e928f12d6f" kindref="member">MPU6050_I2C_SLV4_REG_DIS_BIT</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195" refid="class_m_p_u6050_1a9a4585b3c9e61478db198011107a56a9" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a9a4585b3c9e61478db198011107a56a9" kindref="member">MPU6050::getSlave4MasterDelay</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a27c0a893adec2f318a3b465327725c61" kindref="member">MPU6050_I2C_SLV4_MST_DLY_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac74877bfb915f4a21000728965b87e34" kindref="member">MPU6050_I2C_SLV4_MST_DLY_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1204" refid="class_m_p_u6050_1ac154934a43c599cdc564fb29c22c45eb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ac154934a43c599cdc564fb29c22c45eb" kindref="member">MPU6050::setSlave4MasterDelay</ref>(uint8_t<sp/>delay)<sp/>{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b6fbfceb145ba1c8b19f51475fd7a5d" kindref="member">MPU6050_RA_I2C_SLV4_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a27c0a893adec2f318a3b465327725c61" kindref="member">MPU6050_I2C_SLV4_MST_DLY_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac74877bfb915f4a21000728965b87e34" kindref="member">MPU6050_I2C_SLV4_MST_DLY_LENGTH</ref>,<sp/>delay);</highlight></codeline>
<codeline lineno="1206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1213" refid="class_m_p_u6050_1a9bc93f34bc3d85cbe6010b4a3a88c5a7" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a9bc93f34bc3d85cbe6010b4a3a88c5a7" kindref="member">MPU6050::getSlate4InputByte</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a80d3591c47d0482c0adcf176e1994a65" kindref="member">MPU6050_RA_I2C_SLV4_DI</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C_MST_STATUS<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="class_m_p_u6050_1af2820067b73f177d985ed81e894281b0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af2820067b73f177d985ed81e894281b0" kindref="member">MPU6050::getPassthroughStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a321041d87b000d80f291014771f81092" kindref="member">MPU6050_MST_PASS_THROUGH_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1241" refid="class_m_p_u6050_1a105aefe645e7021f9ba4397e9df4114c" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a105aefe645e7021f9ba4397e9df4114c" kindref="member">MPU6050::getSlave4IsDone</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3d2341997a132b286cfc683520385aef" kindref="member">MPU6050_MST_I2C_SLV4_DONE_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1252" refid="class_m_p_u6050_1acd775c72f85dabfc6f8fba43da096c6d" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1acd775c72f85dabfc6f8fba43da096c6d" kindref="member">MPU6050::getLostArbitration</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8b5ca8697862a741632275a717631358" kindref="member">MPU6050_MST_I2C_LOST_ARB_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1263" refid="class_m_p_u6050_1ae9882b425cbdced4de325b608d896e10" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae9882b425cbdced4de325b608d896e10" kindref="member">MPU6050::getSlave4Nack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1aa807166b18837db271be5b8243368fcd" kindref="member">MPU6050_MST_I2C_SLV4_NACK_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1274" refid="class_m_p_u6050_1a55f24d2f2b13d6e28a7c8b6bf2913520" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a55f24d2f2b13d6e28a7c8b6bf2913520" kindref="member">MPU6050::getSlave3Nack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9f25b37a24ef8be5a4f15f6a81fa3acf" kindref="member">MPU6050_MST_I2C_SLV3_NACK_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1277"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1285" refid="class_m_p_u6050_1af4b5101dab501d6df2e0cae909120771" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af4b5101dab501d6df2e0cae909120771" kindref="member">MPU6050::getSlave2Nack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8362b6475085e832faa1b64794c3792c" kindref="member">MPU6050_MST_I2C_SLV2_NACK_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1296" refid="class_m_p_u6050_1a65cc9d75ff347b146414685fb83fa451" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a65cc9d75ff347b146414685fb83fa451" kindref="member">MPU6050::getSlave1Nack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a750b9796bad18b46826726f2820c79f7" kindref="member">MPU6050_MST_I2C_SLV1_NACK_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1307" refid="class_m_p_u6050_1a74511edfcada3fb21c3327a0c846c72a" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a74511edfcada3fb21c3327a0c846c72a" kindref="member">MPU6050::getSlave0Nack</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5ef54580f436c198fb84d01288fbef49" kindref="member">MPU6050_RA_I2C_MST_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a673b1e4ceda6f8dffd94c18e213f4090" kindref="member">MPU6050_MST_I2C_SLV0_NACK_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INT_PIN_CFG<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320" refid="class_m_p_u6050_1a58da1dfb39eb34e3a09a9b0bf4d87f29" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a58da1dfb39eb34e3a09a9b0bf4d87f29" kindref="member">MPU6050::getInterruptMode</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a0ca358b8171fd08fd631434ee8ff2339" kindref="member">MPU6050_INTCFG_INT_LEVEL_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1330" refid="class_m_p_u6050_1a003a098a1521c5ef4df50c0a8a2d47ab" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a003a098a1521c5ef4df50c0a8a2d47ab" kindref="member">MPU6050::setInterruptMode</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mode)<sp/>{</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a0ca358b8171fd08fd631434ee8ff2339" kindref="member">MPU6050_INTCFG_INT_LEVEL_BIT</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1339" refid="class_m_p_u6050_1af66e6c7b1885dcf452e73371790fddfd" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af66e6c7b1885dcf452e73371790fddfd" kindref="member">MPU6050::getInterruptDrive</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae8cef0becbc209ac15fea3d86261d324" kindref="member">MPU6050_INTCFG_INT_OPEN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349" refid="class_m_p_u6050_1a9d9d6aeea346e6f6fad8e4a428cf3301" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a9d9d6aeea346e6f6fad8e4a428cf3301" kindref="member">MPU6050::setInterruptDrive</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>drive)<sp/>{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae8cef0becbc209ac15fea3d86261d324" kindref="member">MPU6050_INTCFG_INT_OPEN_BIT</ref>,<sp/>drive);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1358" refid="class_m_p_u6050_1a5502c4c2a9bc4ea9267e128b7743923d" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a5502c4c2a9bc4ea9267e128b7743923d" kindref="member">MPU6050::getInterruptLatch</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5704a7815c0fa6dcbfd4666a70e89d90" kindref="member">MPU6050_INTCFG_LATCH_INT_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1368" refid="class_m_p_u6050_1abf9ccf9eb6c7156e6660abb76734920a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1abf9ccf9eb6c7156e6660abb76734920a" kindref="member">MPU6050::setInterruptLatch</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latch)<sp/>{</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5704a7815c0fa6dcbfd4666a70e89d90" kindref="member">MPU6050_INTCFG_LATCH_INT_EN_BIT</ref>,<sp/>latch);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1377" refid="class_m_p_u6050_1a9a098a607e20c64b60e155da35b8264f" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a9a098a607e20c64b60e155da35b8264f" kindref="member">MPU6050::getInterruptLatchClear</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a45b83ab5dc3f439636f6e5c591f1d5b1" kindref="member">MPU6050_INTCFG_INT_RD_CLEAR_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1387" refid="class_m_p_u6050_1a2fa64c7030242aac18bd6727e8ca4a54" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2fa64c7030242aac18bd6727e8ca4a54" kindref="member">MPU6050::setInterruptLatchClear</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clear)<sp/>{</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a45b83ab5dc3f439636f6e5c591f1d5b1" kindref="member">MPU6050_INTCFG_INT_RD_CLEAR_BIT</ref>,<sp/>clear);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1396" refid="class_m_p_u6050_1a60fc85d4f27f99d07ffb9543d5e5f347" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a60fc85d4f27f99d07ffb9543d5e5f347" kindref="member">MPU6050::getFSyncInterruptLevel</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1696357738f5b7e4bc50ec4170be3324" kindref="member">MPU6050_INTCFG_FSYNC_INT_LEVEL_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1406" refid="class_m_p_u6050_1a2b1c75cfc29e8ff8205f4ff33a426716" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2b1c75cfc29e8ff8205f4ff33a426716" kindref="member">MPU6050::setFSyncInterruptLevel</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>level)<sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1696357738f5b7e4bc50ec4170be3324" kindref="member">MPU6050_INTCFG_FSYNC_INT_LEVEL_BIT</ref>,<sp/>level);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1415" refid="class_m_p_u6050_1a4c01f9ab83b64dbbc6b62e658c3d3d9b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a4c01f9ab83b64dbbc6b62e658c3d3d9b" kindref="member">MPU6050::getFSyncInterruptEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a39963ea6d8b9cbeebc4daf40f8872fed" kindref="member">MPU6050_INTCFG_FSYNC_INT_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1425" refid="class_m_p_u6050_1a96aa409e02cdb7d3671890c70b44f167" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a96aa409e02cdb7d3671890c70b44f167" kindref="member">MPU6050::setFSyncInterruptEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1a39963ea6d8b9cbeebc4daf40f8872fed" kindref="member">MPU6050_INTCFG_FSYNC_INT_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1439" refid="class_m_p_u6050_1aed33db318a770d0020eb8b84058650f3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aed33db318a770d0020eb8b84058650f3" kindref="member">MPU6050::getI2CBypassEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1ab3dd639412ccf5b69cfb66346d0b6b99" kindref="member">MPU6050_INTCFG_I2C_BYPASS_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1442"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1454" refid="class_m_p_u6050_1aa828160756a50f414aa3f5f5f0353c70" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aa828160756a50f414aa3f5f5f0353c70" kindref="member">MPU6050::setI2CBypassEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1ab3dd639412ccf5b69cfb66346d0b6b99" kindref="member">MPU6050_INTCFG_I2C_BYPASS_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1466" refid="class_m_p_u6050_1ada96c33957bf20c04ca598a3537358ef" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ada96c33957bf20c04ca598a3537358ef" kindref="member">MPU6050::getClockOutputEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1af6f983ee1d32777d725f259c7806f15a" kindref="member">MPU6050_INTCFG_CLKOUT_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1469"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479" refid="class_m_p_u6050_1a71ec4642b6f6c937bbf6a24fea4179e5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a71ec4642b6f6c937bbf6a24fea4179e5" kindref="member">MPU6050::setClockOutputEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a82344e1daef2bac2e0d938319528be6c" kindref="member">MPU6050_RA_INT_PIN_CFG</ref>,<sp/><ref refid="_m_p_u6050_8h_1af6f983ee1d32777d725f259c7806f15a" kindref="member">MPU6050_INTCFG_CLKOUT_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INT_ENABLE<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492" refid="class_m_p_u6050_1a295c9600579557df065aff88bc7a1d83" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a295c9600579557df065aff88bc7a1d83" kindref="member">MPU6050::getIntEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1504" refid="class_m_p_u6050_1ac7bcf24249dd5000320a8ec0ffe488c6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ac7bcf24249dd5000320a8ec0ffe488c6" kindref="member">MPU6050::setIntEnabled</ref>(uint8_t<sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1513" refid="class_m_p_u6050_1a500bb2df2e46eaecd3fb2ba7304a5ed3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a500bb2df2e46eaecd3fb2ba7304a5ed3" kindref="member">MPU6050::getIntFreefallEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95b5ee3f5f796515c31f0b59f9ce0019" kindref="member">MPU6050_INTERRUPT_FF_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1516"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1523" refid="class_m_p_u6050_1a01a24a05f06463d5277e1670d6260e03" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a01a24a05f06463d5277e1670d6260e03" kindref="member">MPU6050::setIntFreefallEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95b5ee3f5f796515c31f0b59f9ce0019" kindref="member">MPU6050_INTERRUPT_FF_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1532" refid="class_m_p_u6050_1a7de31a8e9f22765329d9f9e02db2f1f0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7de31a8e9f22765329d9f9e02db2f1f0" kindref="member">MPU6050::getIntMotionEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a510f9a47269818529f7dc7f7d5e662ae" kindref="member">MPU6050_INTERRUPT_MOT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1535"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1542" refid="class_m_p_u6050_1a2d2d1d3b03198a09c83a48ec3bc20bd8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2d2d1d3b03198a09c83a48ec3bc20bd8" kindref="member">MPU6050::setIntMotionEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a510f9a47269818529f7dc7f7d5e662ae" kindref="member">MPU6050_INTERRUPT_MOT_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1551" refid="class_m_p_u6050_1ab3cc9bcaca6cec61e7f3f0c6c8a37db5" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ab3cc9bcaca6cec61e7f3f0c6c8a37db5" kindref="member">MPU6050::getIntZeroMotionEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1aa4a24f325b4449adf83ce8458bb31a08" kindref="member">MPU6050_INTERRUPT_ZMOT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1561" refid="class_m_p_u6050_1a5e36e3acace6e545718d7997169cff9b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a5e36e3acace6e545718d7997169cff9b" kindref="member">MPU6050::setIntZeroMotionEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1aa4a24f325b4449adf83ce8458bb31a08" kindref="member">MPU6050_INTERRUPT_ZMOT_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1570" refid="class_m_p_u6050_1a55f99c88cc84901f245924ed5e3fe47e" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a55f99c88cc84901f245924ed5e3fe47e" kindref="member">MPU6050::getIntFIFOBufferOverflowEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9d13e0ea2a96e5d234b7efa3de74d6bf" kindref="member">MPU6050_INTERRUPT_FIFO_OFLOW_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1580" refid="class_m_p_u6050_1a83710a6b1e07f3b385239cc06f275cdb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a83710a6b1e07f3b385239cc06f275cdb" kindref="member">MPU6050::setIntFIFOBufferOverflowEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9d13e0ea2a96e5d234b7efa3de74d6bf" kindref="member">MPU6050_INTERRUPT_FIFO_OFLOW_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1590" refid="class_m_p_u6050_1a282ae29e029d88604a59c92bdf9ce252" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a282ae29e029d88604a59c92bdf9ce252" kindref="member">MPU6050::getIntI2CMasterEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1afb0bff7cde199d7806469f93b6e59b02" kindref="member">MPU6050_INTERRUPT_I2C_MST_INT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600" refid="class_m_p_u6050_1af238656844a3727fa96a8d434b55473e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af238656844a3727fa96a8d434b55473e" kindref="member">MPU6050::setIntI2CMasterEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1afb0bff7cde199d7806469f93b6e59b02" kindref="member">MPU6050_INTERRUPT_I2C_MST_INT_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1610" refid="class_m_p_u6050_1ae15f6043a74c9c9bf9754824802ce8d3" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae15f6043a74c9c9bf9754824802ce8d3" kindref="member">MPU6050::getIntDataReadyEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1af58fafd4db7755e66e0beab54e88c41d" kindref="member">MPU6050_INTERRUPT_DATA_RDY_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1620" refid="class_m_p_u6050_1a67a11be7fc7ab6b1186469b94ea33dda" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a67a11be7fc7ab6b1186469b94ea33dda" kindref="member">MPU6050::setIntDataReadyEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1af58fafd4db7755e66e0beab54e88c41d" kindref="member">MPU6050_INTERRUPT_DATA_RDY_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INT_STATUS<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight></codeline>
<codeline lineno="1633" refid="class_m_p_u6050_1a550a735623cb1de950c72cd6931ee804" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a550a735623cb1de950c72cd6931ee804" kindref="member">MPU6050::getIntStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1644" refid="class_m_p_u6050_1a06bbc2116235b7cc5e28c877e0576749" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a06bbc2116235b7cc5e28c877e0576749" kindref="member">MPU6050::getIntFreefallStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95b5ee3f5f796515c31f0b59f9ce0019" kindref="member">MPU6050_INTERRUPT_FF_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1655" refid="class_m_p_u6050_1ac0c0836aa0d237cac92d11591efd0d9f" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ac0c0836aa0d237cac92d11591efd0d9f" kindref="member">MPU6050::getIntMotionStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a510f9a47269818529f7dc7f7d5e662ae" kindref="member">MPU6050_INTERRUPT_MOT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1666" refid="class_m_p_u6050_1afa73a5ffdc423736ae88702a469ba3a0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1afa73a5ffdc423736ae88702a469ba3a0" kindref="member">MPU6050::getIntZeroMotionStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1aa4a24f325b4449adf83ce8458bb31a08" kindref="member">MPU6050_INTERRUPT_ZMOT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677" refid="class_m_p_u6050_1aa31427588f059c69d93ddb00ba257b12" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aa31427588f059c69d93ddb00ba257b12" kindref="member">MPU6050::getIntFIFOBufferOverflowStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9d13e0ea2a96e5d234b7efa3de74d6bf" kindref="member">MPU6050_INTERRUPT_FIFO_OFLOW_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689" refid="class_m_p_u6050_1a31d6c2b03fc2d6ce82d67d142f316851" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a31d6c2b03fc2d6ce82d67d142f316851" kindref="member">MPU6050::getIntI2CMasterStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1afb0bff7cde199d7806469f93b6e59b02" kindref="member">MPU6050_INTERRUPT_I2C_MST_INT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1700" refid="class_m_p_u6050_1ae4f434eb51a15b536e2e8f89a776872b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae4f434eb51a15b536e2e8f89a776872b" kindref="member">MPU6050::getIntDataReadyStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1af58fafd4db7755e66e0beab54e88c41d" kindref="member">MPU6050_INTERRUPT_DATA_RDY_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"></highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ACCEL_*OUT_*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723" refid="class_m_p_u6050_1aabfd2920e748016383e8124a4b32ad31" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aabfd2920e748016383e8124a4b32ad31" kindref="member">MPU6050::getMotion9</ref>(int16_t*<sp/><ref refid="sampledata_8cpp_1aebedd0a48fe876cce3d3f14326e4ca66" kindref="member">ax</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a46d26903f1874d06875a974dfa1a9d3c" kindref="member">ay</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a41e60f9324f9d4fd9e916e964370fb2f" kindref="member">az</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a4524555b50a829ee7628cf5e5806f227" kindref="member">gx</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a8bd44b73dc5745833a8dd8d2a6240613" kindref="member">gy</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1aa61e9778c784ec4695029ed2cc769a61" kindref="member">gz</ref>,<sp/>int16_t*<sp/>mx,<sp/>int16_t*<sp/>my,<sp/>int16_t*<sp/>mz)<sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a574d3093dc131e4251a9b37adf208ca7" kindref="member">getMotion6</ref>(<ref refid="sampledata_8cpp_1aebedd0a48fe876cce3d3f14326e4ca66" kindref="member">ax</ref>,<sp/><ref refid="sampledata_8cpp_1a46d26903f1874d06875a974dfa1a9d3c" kindref="member">ay</ref>,<sp/><ref refid="sampledata_8cpp_1a41e60f9324f9d4fd9e916e964370fb2f" kindref="member">az</ref>,<sp/><ref refid="sampledata_8cpp_1a4524555b50a829ee7628cf5e5806f227" kindref="member">gx</ref>,<sp/><ref refid="sampledata_8cpp_1a8bd44b73dc5745833a8dd8d2a6240613" kindref="member">gy</ref>,<sp/><ref refid="sampledata_8cpp_1aa61e9778c784ec4695029ed2cc769a61" kindref="member">gz</ref>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>magnetometer<sp/>integration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1739" refid="class_m_p_u6050_1a574d3093dc131e4251a9b37adf208ca7" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a574d3093dc131e4251a9b37adf208ca7" kindref="member">MPU6050::getMotion6</ref>(int16_t*<sp/><ref refid="sampledata_8cpp_1aebedd0a48fe876cce3d3f14326e4ca66" kindref="member">ax</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a46d26903f1874d06875a974dfa1a9d3c" kindref="member">ay</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a41e60f9324f9d4fd9e916e964370fb2f" kindref="member">az</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a4524555b50a829ee7628cf5e5806f227" kindref="member">gx</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1a8bd44b73dc5745833a8dd8d2a6240613" kindref="member">gy</ref>,<sp/>int16_t*<sp/><ref refid="sampledata_8cpp_1aa61e9778c784ec4695029ed2cc769a61" kindref="member">gz</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9f08bfd13152053c226e5efb57e1c209" kindref="member">MPU6050_RA_ACCEL_XOUT_H</ref>,<sp/>14,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="sampledata_8cpp_1aebedd0a48fe876cce3d3f14326e4ca66" kindref="member">ax</ref><sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="sampledata_8cpp_1a46d26903f1874d06875a974dfa1a9d3c" kindref="member">ay</ref><sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[2])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[3];</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="sampledata_8cpp_1a41e60f9324f9d4fd9e916e964370fb2f" kindref="member">az</ref><sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[4])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[5];</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="sampledata_8cpp_1a4524555b50a829ee7628cf5e5806f227" kindref="member">gx</ref><sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[8])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[9];</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="sampledata_8cpp_1a8bd44b73dc5745833a8dd8d2a6240613" kindref="member">gy</ref><sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[10])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[11];</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="sampledata_8cpp_1aa61e9778c784ec4695029ed2cc769a61" kindref="member">gz</ref><sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[12])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[13];</highlight></codeline>
<codeline lineno="1747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1784" refid="class_m_p_u6050_1a658dfc7e35b7fdba360a75f137bde33a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a658dfc7e35b7fdba360a75f137bde33a" kindref="member">MPU6050::getAcceleration</ref>(int16_t*<sp/>x,<sp/>int16_t*<sp/>y,<sp/>int16_t*<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9f08bfd13152053c226e5efb57e1c209" kindref="member">MPU6050_RA_ACCEL_XOUT_H</ref>,<sp/>6,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[2])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[3];</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[4])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[5];</highlight></codeline>
<codeline lineno="1789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1795" refid="class_m_p_u6050_1aa68475158c22128e5459c4c5e19439dc" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1aa68475158c22128e5459c4c5e19439dc" kindref="member">MPU6050::getAccelerationX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9f08bfd13152053c226e5efb57e1c209" kindref="member">MPU6050_RA_ACCEL_XOUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1804" refid="class_m_p_u6050_1a27240b90d3e03c85b7a619b794bb1756" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1a27240b90d3e03c85b7a619b794bb1756" kindref="member">MPU6050::getAccelerationY</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1accc9b8669e7b799c8630e8a84cd24692" kindref="member">MPU6050_RA_ACCEL_YOUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1807"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1813" refid="class_m_p_u6050_1acf5f5a20c10d99a1bdedf139f897bfdf" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1acf5f5a20c10d99a1bdedf139f897bfdf" kindref="member">MPU6050::getAccelerationZ</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2244ed0bf9c94ab5cde2bba541bfa22f" kindref="member">MPU6050_RA_ACCEL_ZOUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TEMP_OUT_*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1824" refid="class_m_p_u6050_1aedfa4f1e6507f48c0a09545345a87875" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1aedfa4f1e6507f48c0a09545345a87875" kindref="member">MPU6050::getTemperature</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aa4318f7e67df92b06d81356b38048a6d" kindref="member">MPU6050_RA_TEMP_OUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GYRO_*OUT_*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1863" refid="class_m_p_u6050_1a8ca85b87e7e0230921062fce7889b0d1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a8ca85b87e7e0230921062fce7889b0d1" kindref="member">MPU6050::getRotation</ref>(int16_t*<sp/>x,<sp/>int16_t*<sp/>y,<sp/>int16_t*<sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1abf19d88e8e460df1c49750393ee4b72c" kindref="member">MPU6050_RA_GYRO_XOUT_H</ref>,<sp/>6,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/>*x<sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/>*y<sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[2])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[3];</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/>*z<sp/>=<sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[4])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[5];</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1874" refid="class_m_p_u6050_1a268f52843a24992ff06a3f12392de584" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1a268f52843a24992ff06a3f12392de584" kindref="member">MPU6050::getRotationX</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1abf19d88e8e460df1c49750393ee4b72c" kindref="member">MPU6050_RA_GYRO_XOUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1883" refid="class_m_p_u6050_1a97cbe7f10dd27e07bd78d1c25e4286b5" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1a97cbe7f10dd27e07bd78d1c25e4286b5" kindref="member">MPU6050::getRotationY</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a97729ffd27bd81b9af5b42a598f91736" kindref="member">MPU6050_RA_GYRO_YOUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1886"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1892" refid="class_m_p_u6050_1ae0fee1ba996a2b6f914df6fc34e7da48" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1ae0fee1ba996a2b6f914df6fc34e7da48" kindref="member">MPU6050::getRotationZ</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac134c8894ef3aa4715e796f7a3a56383" kindref="member">MPU6050_RA_GYRO_ZOUT_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXT_SENS_DATA_*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1973" refid="class_m_p_u6050_1a7f786ab4264f40e5a95e8937ec9adcc2" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a7f786ab4264f40e5a95e8937ec9adcc2" kindref="member">MPU6050::getExternalSensorByte</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afbb19101a107f71744f2146e0f09d926" kindref="member">MPU6050_RA_EXT_SENS_DATA_00</ref><sp/>+<sp/>position,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="1976"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1982" refid="class_m_p_u6050_1aaee15e48af7ba78660b5754f3bb5f37a" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="class_m_p_u6050_1aaee15e48af7ba78660b5754f3bb5f37a" kindref="member">MPU6050::getExternalSensorWord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afbb19101a107f71744f2146e0f09d926" kindref="member">MPU6050_RA_EXT_SENS_DATA_00</ref><sp/>+<sp/>position,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((uint16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="1985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1991" refid="class_m_p_u6050_1afd8983f0911e37015434bebc85185fb2" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="class_m_p_u6050_1afd8983f0911e37015434bebc85185fb2" kindref="member">MPU6050::getExternalSensorDWord</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position)<sp/>{</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afbb19101a107f71744f2146e0f09d926" kindref="member">MPU6050_RA_EXT_SENS_DATA_00</ref><sp/>+<sp/>position,<sp/>4,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((uint32_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>(((uint32_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1])<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>(((uint16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[2])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[3];</highlight></codeline>
<codeline lineno="1994"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MOT_DETECT_STATUS<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003" refid="class_m_p_u6050_1a446d235905783c5b90637a6b6792ac76" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a446d235905783c5b90637a6b6792ac76" kindref="member">MPU6050::getXNegMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4aad48766db4bb295d0d1f4a7857b8c3" kindref="member">MPU6050_MOTION_MOT_XNEG_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2012" refid="class_m_p_u6050_1a410af58f5ff5f74e4ef8d61495908226" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a410af58f5ff5f74e4ef8d61495908226" kindref="member">MPU6050::getXPosMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1aa8e676899573e11b356291e335cbe340" kindref="member">MPU6050_MOTION_MOT_XPOS_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2021" refid="class_m_p_u6050_1a6c45be7b4aa9081c83ee0f4081bf0827" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6c45be7b4aa9081c83ee0f4081bf0827" kindref="member">MPU6050::getYNegMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5273d39ef8f5d87e931609fee90d4120" kindref="member">MPU6050_MOTION_MOT_YNEG_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2030" refid="class_m_p_u6050_1ad959ec84b9fe9f7e416b7af252f37abc" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad959ec84b9fe9f7e416b7af252f37abc" kindref="member">MPU6050::getYPosMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae1473d5aa4b8f0dbda1e15b205c23bcf" kindref="member">MPU6050_MOTION_MOT_YPOS_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2039" refid="class_m_p_u6050_1a3601b732eb15644212b8f29cf396e142" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3601b732eb15644212b8f29cf396e142" kindref="member">MPU6050::getZNegMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1acdf23f184c06ec12587582b4a0ad60a8" kindref="member">MPU6050_MOTION_MOT_ZNEG_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2042"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2048" refid="class_m_p_u6050_1a33c766cd415fc5780417b1ed76717875" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a33c766cd415fc5780417b1ed76717875" kindref="member">MPU6050::getZPosMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a21646cdd13cd4d72bc18ec615774e9c5" kindref="member">MPU6050_MOTION_MOT_ZPOS_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2051"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2057" refid="class_m_p_u6050_1a384765351b5c4bd2b6efec9ed71ad1b7" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a384765351b5c4bd2b6efec9ed71ad1b7" kindref="member">MPU6050::getZeroMotionDetected</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5b725ca4941b1a73f8e4df3d7164d514" kindref="member">MPU6050_RA_MOT_DETECT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a851e3f5ae43d03ef3d59916a731a8c6a" kindref="member">MPU6050_MOTION_MOT_ZRMOT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C_SLV*_DO<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072" refid="class_m_p_u6050_1a34a1def575f6abcd464afe954de8a461" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a34a1def575f6abcd464afe954de8a461" kindref="member">MPU6050::setSlaveOutputByte</ref>(uint8_t<sp/>num,<sp/>uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>3)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a53ca9562881303b665299907726fb753" kindref="member">MPU6050_RA_I2C_SLV0_DO</ref><sp/>+<sp/>num,<sp/>data);</highlight></codeline>
<codeline lineno="2075"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I2C_MST_DELAY_CTRL<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087" refid="class_m_p_u6050_1a0e5cb13838298609b5260fd1558f8c92" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a0e5cb13838298609b5260fd1558f8c92" kindref="member">MPU6050::getExternalShadowDelayEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95960b2c82d00341b6174272e2fb3e07" kindref="member">MPU6050_RA_I2C_MST_DELAY_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a77b25de3f3dbdb1aec3201cab7d88980" kindref="member">MPU6050_DELAYCTRL_DELAY_ES_SHADOW_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2090"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2097" refid="class_m_p_u6050_1a9160193d883871037c6535a9d3e02ee2" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a9160193d883871037c6535a9d3e02ee2" kindref="member">MPU6050::setExternalShadowDelayEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95960b2c82d00341b6174272e2fb3e07" kindref="member">MPU6050_RA_I2C_MST_DELAY_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a77b25de3f3dbdb1aec3201cab7d88980" kindref="member">MPU6050_DELAYCTRL_DELAY_ES_SHADOW_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2118" refid="class_m_p_u6050_1ae84fd795630f9ab5e8d6b19a616a11ce" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae84fd795630f9ab5e8d6b19a616a11ce" kindref="member">MPU6050::getSlaveDelayEnabled</ref>(uint8_t<sp/>num)<sp/>{</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MPU6050_DELAYCTRL_I2C_SLV4_DLY_EN_BIT<sp/>is<sp/>4,<sp/>SLV3<sp/>is<sp/>3,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>&gt;<sp/>4)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95960b2c82d00341b6174272e2fb3e07" kindref="member">MPU6050_RA_I2C_MST_DELAY_CTRL</ref>,<sp/>num,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2130" refid="class_m_p_u6050_1a471929d7cf9049357c345633d22412a9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a471929d7cf9049357c345633d22412a9" kindref="member">MPU6050::setSlaveDelayEnabled</ref>(uint8_t<sp/>num,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95960b2c82d00341b6174272e2fb3e07" kindref="member">MPU6050_RA_I2C_MST_DELAY_CTRL</ref>,<sp/>num,<sp/>enabled);</highlight></codeline>
<codeline lineno="2132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SIGNAL_PATH_RESET<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142" refid="class_m_p_u6050_1af1599c0d70f07fd3e28683d571842c22" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af1599c0d70f07fd3e28683d571842c22" kindref="member">MPU6050::resetGyroscopePath</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1accbe0fc25de063494eac9fda35ed1ca5" kindref="member">MPU6050_RA_SIGNAL_PATH_RESET</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac83827506ea3a6c8ed40a0c6e97e2417" kindref="member">MPU6050_PATHRESET_GYRO_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2151" refid="class_m_p_u6050_1a99ee74708c12f32e48ef5ec69ac9f4a9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a99ee74708c12f32e48ef5ec69ac9f4a9" kindref="member">MPU6050::resetAccelerometerPath</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1accbe0fc25de063494eac9fda35ed1ca5" kindref="member">MPU6050_RA_SIGNAL_PATH_RESET</ref>,<sp/><ref refid="_m_p_u6050_8h_1aac6a4cb8f1df1d5e7981c276dddf17ab" kindref="member">MPU6050_PATHRESET_ACCEL_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2160" refid="class_m_p_u6050_1a559c2d091d36a4e0489bc639916ddbb6" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a559c2d091d36a4e0489bc639916ddbb6" kindref="member">MPU6050::resetTemperaturePath</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1accbe0fc25de063494eac9fda35ed1ca5" kindref="member">MPU6050_RA_SIGNAL_PATH_RESET</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4ef510137ee58f16813c0326b196e5a6" kindref="member">MPU6050_PATHRESET_TEMP_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MOT_DETECT_CTRL<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2180" refid="class_m_p_u6050_1aae903df2accc687423f9cd0a78f9cd32" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1aae903df2accc687423f9cd0a78f9cd32" kindref="member">MPU6050::getAccelerometerPowerOnDelay</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae83e3eb48f0803227db54291fdf0ea80" kindref="member">MPU6050_RA_MOT_DETECT_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a31babac49d185160595482b1a41a9db3" kindref="member">MPU6050_DETECT_ACCEL_ON_DELAY_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1aedcf3d8fb788339ce1a148b5163f90a3" kindref="member">MPU6050_DETECT_ACCEL_ON_DELAY_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2190" refid="class_m_p_u6050_1a2bbde7653d2d2d37e16e515599f3b08b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2bbde7653d2d2d37e16e515599f3b08b" kindref="member">MPU6050::setAccelerometerPowerOnDelay</ref>(uint8_t<sp/>delay)<sp/>{</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae83e3eb48f0803227db54291fdf0ea80" kindref="member">MPU6050_RA_MOT_DETECT_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a31babac49d185160595482b1a41a9db3" kindref="member">MPU6050_DETECT_ACCEL_ON_DELAY_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1aedcf3d8fb788339ce1a148b5163f90a3" kindref="member">MPU6050_DETECT_ACCEL_ON_DELAY_LENGTH</ref>,<sp/>delay);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2219" refid="class_m_p_u6050_1af6d6fa9869636989a8b29c4827ad7de8" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1af6d6fa9869636989a8b29c4827ad7de8" kindref="member">MPU6050::getFreefallDetectionCounterDecrement</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae83e3eb48f0803227db54291fdf0ea80" kindref="member">MPU6050_RA_MOT_DETECT_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a77e346aef05647d9d492077e0297d67b" kindref="member">MPU6050_DETECT_FF_COUNT_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2540220a4e752351f305343131f21858" kindref="member">MPU6050_DETECT_FF_COUNT_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2229" refid="class_m_p_u6050_1a18dd79b7c53600e9ce97eed4bfe6cf15" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a18dd79b7c53600e9ce97eed4bfe6cf15" kindref="member">MPU6050::setFreefallDetectionCounterDecrement</ref>(uint8_t<sp/>decrement)<sp/>{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae83e3eb48f0803227db54291fdf0ea80" kindref="member">MPU6050_RA_MOT_DETECT_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a77e346aef05647d9d492077e0297d67b" kindref="member">MPU6050_DETECT_FF_COUNT_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2540220a4e752351f305343131f21858" kindref="member">MPU6050_DETECT_FF_COUNT_LENGTH</ref>,<sp/>decrement);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2255" refid="class_m_p_u6050_1a0ed8de8eb440dbfdec829297527b0da6" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a0ed8de8eb440dbfdec829297527b0da6" kindref="member">MPU6050::getMotionDetectionCounterDecrement</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae83e3eb48f0803227db54291fdf0ea80" kindref="member">MPU6050_RA_MOT_DETECT_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a43d8fcac0f570c3333ef3236764c8315" kindref="member">MPU6050_DETECT_MOT_COUNT_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a02fffe7c5a95c533a8ccb484ebf8a574" kindref="member">MPU6050_DETECT_MOT_COUNT_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2265" refid="class_m_p_u6050_1a74cc3ea727afa5d4406175085e60d08c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a74cc3ea727afa5d4406175085e60d08c" kindref="member">MPU6050::setMotionDetectionCounterDecrement</ref>(uint8_t<sp/>decrement)<sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae83e3eb48f0803227db54291fdf0ea80" kindref="member">MPU6050_RA_MOT_DETECT_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a43d8fcac0f570c3333ef3236764c8315" kindref="member">MPU6050_DETECT_MOT_COUNT_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a02fffe7c5a95c533a8ccb484ebf8a574" kindref="member">MPU6050_DETECT_MOT_COUNT_LENGTH</ref>,<sp/>decrement);</highlight></codeline>
<codeline lineno="2267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USER_CTRL<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2279" refid="class_m_p_u6050_1ae2687a09ebe0d7fbbf74f560e0dd9a44" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ae2687a09ebe0d7fbbf74f560e0dd9a44" kindref="member">MPU6050::getFIFOEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4d287b028bfb7d4f40a8da106ed74d66" kindref="member">MPU6050_USERCTRL_FIFO_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2289" refid="class_m_p_u6050_1a78e58ab27986db6999af775ed4d43091" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a78e58ab27986db6999af775ed4d43091" kindref="member">MPU6050::setFIFOEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4d287b028bfb7d4f40a8da106ed74d66" kindref="member">MPU6050_USERCTRL_FIFO_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2303" refid="class_m_p_u6050_1a6b45e538f2082eb1b1975ed56e3e21bc" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6b45e538f2082eb1b1975ed56e3e21bc" kindref="member">MPU6050::getI2CMasterModeEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1974fd2b8e743e0c5517ff903da5f99a" kindref="member">MPU6050_USERCTRL_I2C_MST_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2313" refid="class_m_p_u6050_1a6503f0fdfefa0fd287a75032667b7b69" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6503f0fdfefa0fd287a75032667b7b69" kindref="member">MPU6050::setI2CMasterModeEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1974fd2b8e743e0c5517ff903da5f99a" kindref="member">MPU6050_USERCTRL_I2C_MST_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2320" refid="class_m_p_u6050_1a269710b7bca814bbf67e7bb38c381650" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a269710b7bca814bbf67e7bb38c381650" kindref="member">MPU6050::switchSPIEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a60cd97f110d6644292f0d0dc42178e54" kindref="member">MPU6050_USERCTRL_I2C_IF_DIS_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2329" refid="class_m_p_u6050_1aafa0dc38b7ea2acd1aecd5d9df8cbd08" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aafa0dc38b7ea2acd1aecd5d9df8cbd08" kindref="member">MPU6050::resetFIFO</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1ad13b067b38b832477c0139266a863204" kindref="member">MPU6050_USERCTRL_FIFO_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2338" refid="class_m_p_u6050_1a96332c394f1b7efd44c83a4ff690e732" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a96332c394f1b7efd44c83a4ff690e732" kindref="member">MPU6050::resetI2CMaster</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1abca1324e14bfff124823daecc1df2479" kindref="member">MPU6050_USERCTRL_I2C_MST_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2353" refid="class_m_p_u6050_1a9a271104d3302abc4af005c69a930094" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a9a271104d3302abc4af005c69a930094" kindref="member">MPU6050::resetSensors</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a19d39a5b4f64b95d9003c087ccbc6a67" kindref="member">MPU6050_USERCTRL_SIG_COND_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PWR_MGMT_1<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364" refid="class_m_p_u6050_1a7100b6d276c3c8664cf00d768b7b0dee" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7100b6d276c3c8664cf00d768b7b0dee" kindref="member">MPU6050::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a7b0ecc568c76cb52b57dd31487c2379e" kindref="member">MPU6050_PWR1_DEVICE_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2378" refid="class_m_p_u6050_1a196404ef04b959083d4bf5e6f1cd8b98" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a196404ef04b959083d4bf5e6f1cd8b98" kindref="member">MPU6050::getSleepEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a303276044c71a042bb43d24a888104d9" kindref="member">MPU6050_PWR1_SLEEP_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2388" refid="class_m_p_u6050_1a15ec5f8e7daf235f507c1d8b96af051a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a15ec5f8e7daf235f507c1d8b96af051a" kindref="member">MPU6050::setSleepEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a303276044c71a042bb43d24a888104d9" kindref="member">MPU6050_PWR1_SLEEP_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2399" refid="class_m_p_u6050_1a89afc5235b9088c696e2cc7841f5259a" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a89afc5235b9088c696e2cc7841f5259a" kindref="member">MPU6050::getWakeCycleEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a78ae6e61ebfd0704101e073b268151d4" kindref="member">MPU6050_PWR1_CYCLE_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2409" refid="class_m_p_u6050_1a340eade71cf6286f6904c2021330944e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a340eade71cf6286f6904c2021330944e" kindref="member">MPU6050::setWakeCycleEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a78ae6e61ebfd0704101e073b268151d4" kindref="member">MPU6050_PWR1_CYCLE_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2423" refid="class_m_p_u6050_1a31f588beab6760258212c65725eba336" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a31f588beab6760258212c65725eba336" kindref="member">MPU6050::getTempSensorEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1af87944da0c9b3b0a14ed2f0049fe0ec2" kindref="member">MPU6050_PWR1_TEMP_DIS_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0]<sp/>==<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>1<sp/>is<sp/>actually<sp/>disabled<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2437" refid="class_m_p_u6050_1a0113871802e88c80fe69ce1f607987ff" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a0113871802e88c80fe69ce1f607987ff" kindref="member">MPU6050::setTempSensorEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>is<sp/>actually<sp/>disabled<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1af87944da0c9b3b0a14ed2f0049fe0ec2" kindref="member">MPU6050_PWR1_TEMP_DIS_BIT</ref>,<sp/>!enabled);</highlight></codeline>
<codeline lineno="2440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2447" refid="class_m_p_u6050_1a8ed670258a805807b5102cdc5d0996a8" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a8ed670258a805807b5102cdc5d0996a8" kindref="member">MPU6050::getClockSource</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a77a4abb41f9adaa799cccf6402443cb9" kindref="member">MPU6050_PWR1_CLKSEL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a211c99bb94df09b85cf838b2a5eb7167" kindref="member">MPU6050_PWR1_CLKSEL_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2481" refid="class_m_p_u6050_1a4c1cd147d038e024bdeaa053c4d77734" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a4c1cd147d038e024bdeaa053c4d77734" kindref="member">MPU6050::setClockSource</ref>(uint8_t<sp/>source)<sp/>{</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac6c83146165a2307ac7155d4fa566df4" kindref="member">MPU6050_RA_PWR_MGMT_1</ref>,<sp/><ref refid="_m_p_u6050_8h_1a77a4abb41f9adaa799cccf6402443cb9" kindref="member">MPU6050_PWR1_CLKSEL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1a211c99bb94df09b85cf838b2a5eb7167" kindref="member">MPU6050_PWR1_CLKSEL_LENGTH</ref>,<sp/>source);</highlight></codeline>
<codeline lineno="2483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PWR_MGMT_2<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a249a905ae4572a462414f2d94236258a" kindref="member">MPU6050::getWakeFrequency</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95c845eb6e9149bc273fee5892e642f8" kindref="member">MPU6050_PWR2_LP_WAKE_CTRL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1aad1694bc8ecb13230269872a70a71e8e" kindref="member">MPU6050_PWR2_LP_WAKE_CTRL_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2518"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a62495e89f4787e6b18f0f795cef2b7cd" kindref="member">MPU6050::setWakeFrequency</ref>(uint8_t<sp/>frequency)<sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a95c845eb6e9149bc273fee5892e642f8" kindref="member">MPU6050_PWR2_LP_WAKE_CTRL_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1aad1694bc8ecb13230269872a70a71e8e" kindref="member">MPU6050_PWR2_LP_WAKE_CTRL_LENGTH</ref>,<sp/>frequency);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a99261a04739fdb7a9a1c5b67ce3e710e" kindref="member">MPU6050::getStandbyXAccelEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a94e69b1bac91c18489c5f1d59d9dcc54" kindref="member">MPU6050_PWR2_STBY_XA_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2538"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1af4df87fd2e87f41d06706cfd5bbc2a2c" kindref="member">MPU6050::setStandbyXAccelEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a94e69b1bac91c18489c5f1d59d9dcc54" kindref="member">MPU6050_PWR2_STBY_XA_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2547"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a104f2ec438d745f8fdeec202bae09b48" kindref="member">MPU6050::getStandbyYAccelEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1affa59453badce23273e2a6470da072d3" kindref="member">MPU6050_PWR2_STBY_YA_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2557"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7ce7d3299479eb66518acf0697132835" kindref="member">MPU6050::setStandbyYAccelEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1affa59453badce23273e2a6470da072d3" kindref="member">MPU6050_PWR2_STBY_YA_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2566"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1adae85612e047c4c7f0c3b7110fc92956" kindref="member">MPU6050::getStandbyZAccelEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a913262cf8ad43c4dcb28aa31521fac23" kindref="member">MPU6050_PWR2_STBY_ZA_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2576"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ac5fd917549d2ed0f12b8a17167271199" kindref="member">MPU6050::setStandbyZAccelEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a913262cf8ad43c4dcb28aa31521fac23" kindref="member">MPU6050_PWR2_STBY_ZA_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2585"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1acb5fde4167aa54fbbe84706d577a48a6" kindref="member">MPU6050::getStandbyXGyroEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1aab0f2205a6568a80659bfafbe770cae8" kindref="member">MPU6050_PWR2_STBY_XG_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2595"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ac1c6d8f623a9ca00a4ddc50f6615b977" kindref="member">MPU6050::setStandbyXGyroEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1aab0f2205a6568a80659bfafbe770cae8" kindref="member">MPU6050_PWR2_STBY_XG_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2604"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aaad2985f8d22aec123f1e1dabcdd427a" kindref="member">MPU6050::getStandbyYGyroEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a81afc3f43cd9caf0739a3d3432718506" kindref="member">MPU6050_PWR2_STBY_YG_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2607"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2614"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ab0973d64b7132188539b07991f7ea1f0" kindref="member">MPU6050::setStandbyYGyroEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a81afc3f43cd9caf0739a3d3432718506" kindref="member">MPU6050_PWR2_STBY_YG_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2623"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a20f7804db1a980a3c425ae44c33d420b" kindref="member">MPU6050::getStandbyZGyroEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a6da4d8df0e058732364f3353c30527c5" kindref="member">MPU6050_PWR2_STBY_ZG_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2633"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ada7c8a873fe157703dcdc08e25b48e32" kindref="member">MPU6050::setStandbyZGyroEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aace6ce286da4d5f8c8f5ba6f80688e13" kindref="member">MPU6050_RA_PWR_MGMT_2</ref>,<sp/><ref refid="_m_p_u6050_8h_1a6da4d8df0e058732364f3353c30527c5" kindref="member">MPU6050_PWR2_STBY_ZG_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIFO_COUNT*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal">uint16_t<sp/><ref refid="class_m_p_u6050_1ad96c7a75a39327ebaae01386bcbc58dd" kindref="member">MPU6050::getFIFOCount</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aaff95ccbc06a8f3336850a35cd8df488" kindref="member">MPU6050_RA_FIFO_COUNTH</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((uint16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FIFO_R_W<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a7733011d30d5b64564f6b5422d8639ae" kindref="member">MPU6050::getFIFOByte</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4fd3a14925375c3112b830d6d1dd1fe9" kindref="member">MPU6050_RA_FIFO_R_W</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aba36dcb767b5cd8965053987aaa08a6a" kindref="member">MPU6050::getFIFOBytes</ref>(uint8_t<sp/>*data,<sp/>uint8_t<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4fd3a14925375c3112b830d6d1dd1fe9" kindref="member">MPU6050_RA_FIFO_R_W</ref>,<sp/>length,<sp/>data);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2689"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a66da5bc38aa82404117d1ef5306c951a" kindref="member">MPU6050::setFIFOByte</ref>(uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a4fd3a14925375c3112b830d6d1dd1fe9" kindref="member">MPU6050_RA_FIFO_R_W</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WHO_AM_I<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a35ae3c8894b3258e642043886801e031" kindref="member">MPU6050::getDeviceID</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a83d60aa4c37e954266ecd17ae02ec174" kindref="member">MPU6050_RA_WHO_AM_I</ref>,<sp/><ref refid="_m_p_u6050_8h_1a3c136677cedb8e974669e70018326ea1" kindref="member">MPU6050_WHO_AM_I_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ab07bf191f71bdb7f5edcd2b41f6c0709" kindref="member">MPU6050_WHO_AM_I_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2705"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight><highlight class="comment">//<sp/>========<sp/>UNDOCUMENTED/DMP<sp/>REGISTERS/METHODS<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XG_OFFS_TC<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a6eb099e3dc96eb4d113cf81804256e8c" kindref="member">MPU6050::getOTPBankValid</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afd22a4b047ae1372899fd03c7d3e7b95" kindref="member">MPU6050_RA_XG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9640cbeb0cb15ccac6f62721ccde7e6c" kindref="member">MPU6050_TC_OTP_BNK_VLD_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a074024a7818b2998b3f1c99064bea3a0" kindref="member">MPU6050::setOTPBankValid</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afd22a4b047ae1372899fd03c7d3e7b95" kindref="member">MPU6050_RA_XG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a9640cbeb0cb15ccac6f62721ccde7e6c" kindref="member">MPU6050_TC_OTP_BNK_VLD_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2717"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2718"><highlight class="normal">int8_t<sp/><ref refid="class_m_p_u6050_1a4d71a79f90f97f8ea0f88825502789b8" kindref="member">MPU6050::getXGyroOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afd22a4b047ae1372899fd03c7d3e7b95" kindref="member">MPU6050_RA_XG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a147a44c6c85258a6e5847333170f36e2" kindref="member">MPU6050_TC_OFFSET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac66acfca33282b6e38fed6bbd6b0d455" kindref="member">MPU6050_TC_OFFSET_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad0c66eb7f77ab0ef19fca7124c63ba9d" kindref="member">MPU6050::setXGyroOffset</ref>(int8_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1afd22a4b047ae1372899fd03c7d3e7b95" kindref="member">MPU6050_RA_XG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a147a44c6c85258a6e5847333170f36e2" kindref="member">MPU6050_TC_OFFSET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac66acfca33282b6e38fed6bbd6b0d455" kindref="member">MPU6050_TC_OFFSET_LENGTH</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"></highlight><highlight class="comment">//<sp/>YG_OFFS_TC<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal">int8_t<sp/><ref refid="class_m_p_u6050_1a829d38a14ad1096ea73ee628cdf03b53" kindref="member">MPU6050::getYGyroOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a45060dc0c7bdd30589a081dbe4d43b98" kindref="member">MPU6050_RA_YG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a147a44c6c85258a6e5847333170f36e2" kindref="member">MPU6050_TC_OFFSET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac66acfca33282b6e38fed6bbd6b0d455" kindref="member">MPU6050_TC_OFFSET_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7f547a52a20bc1ebb23faa1e6668bff1" kindref="member">MPU6050::setYGyroOffset</ref>(int8_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a45060dc0c7bdd30589a081dbe4d43b98" kindref="member">MPU6050_RA_YG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a147a44c6c85258a6e5847333170f36e2" kindref="member">MPU6050_TC_OFFSET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac66acfca33282b6e38fed6bbd6b0d455" kindref="member">MPU6050_TC_OFFSET_LENGTH</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ZG_OFFS_TC<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal">int8_t<sp/><ref refid="class_m_p_u6050_1a62b2adfa117b435ec24b574d9821d01e" kindref="member">MPU6050::getZGyroOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a8e5e9742072bb80db06ccd46f52e2b6d" kindref="member">I2Cdev::readBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a76fe60d1cec00e0ba64ed7da364ff8f3" kindref="member">MPU6050_RA_ZG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a147a44c6c85258a6e5847333170f36e2" kindref="member">MPU6050_TC_OFFSET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac66acfca33282b6e38fed6bbd6b0d455" kindref="member">MPU6050_TC_OFFSET_LENGTH</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a20dbe1fac22c021fb3228522aea5c96e" kindref="member">MPU6050::setZGyroOffset</ref>(int8_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1a913371251b6a41520c080115650e1b59" kindref="member">I2Cdev::writeBits</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a76fe60d1cec00e0ba64ed7da364ff8f3" kindref="member">MPU6050_RA_ZG_OFFS_TC</ref>,<sp/><ref refid="_m_p_u6050_8h_1a147a44c6c85258a6e5847333170f36e2" kindref="member">MPU6050_TC_OFFSET_BIT</ref>,<sp/><ref refid="_m_p_u6050_8h_1ac66acfca33282b6e38fed6bbd6b0d455" kindref="member">MPU6050_TC_OFFSET_LENGTH</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight><highlight class="comment">//<sp/>X_FINE_GAIN<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal">int8_t<sp/><ref refid="class_m_p_u6050_1a9c9332a5050be54fa47f321be01d524b" kindref="member">MPU6050::getXFineGain</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a93f16a19ecbbe05449c9183eb450204e" kindref="member">MPU6050_RA_X_FINE_GAIN</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a73d4473d134cf5f7c516ff38faa2b4a8" kindref="member">MPU6050::setXFineGain</ref>(int8_t<sp/><ref refid="_m_c_p3428_8h_1a5c9c0f59d06b7360c990c3f49be81fa7" kindref="member">gain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a93f16a19ecbbe05449c9183eb450204e" kindref="member">MPU6050_RA_X_FINE_GAIN</ref>,<sp/><ref refid="_m_c_p3428_8h_1a5c9c0f59d06b7360c990c3f49be81fa7" kindref="member">gain</ref>);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Y_FINE_GAIN<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal">int8_t<sp/><ref refid="class_m_p_u6050_1ad471fd5499dd2fbf730c066a8893420d" kindref="member">MPU6050::getYFineGain</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a88f99638599b4102ee4e3e34db7b7392" kindref="member">MPU6050_RA_Y_FINE_GAIN</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7f97e86dcfa1d491d8f809112c6fb40b" kindref="member">MPU6050::setYFineGain</ref>(int8_t<sp/><ref refid="_m_c_p3428_8h_1a5c9c0f59d06b7360c990c3f49be81fa7" kindref="member">gain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a88f99638599b4102ee4e3e34db7b7392" kindref="member">MPU6050_RA_Y_FINE_GAIN</ref>,<sp/><ref refid="_m_c_p3428_8h_1a5c9c0f59d06b7360c990c3f49be81fa7" kindref="member">gain</ref>);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Z_FINE_GAIN<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal">int8_t<sp/><ref refid="class_m_p_u6050_1a13c980e62e6e7774299fea1c827b6e7a" kindref="member">MPU6050::getZFineGain</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a0bfea60d0fc70f48f9122cc213621649" kindref="member">MPU6050_RA_Z_FINE_GAIN</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a98107dec68994cfc8c8cb1d0d78d2b6b" kindref="member">MPU6050::setZFineGain</ref>(int8_t<sp/><ref refid="_m_c_p3428_8h_1a5c9c0f59d06b7360c990c3f49be81fa7" kindref="member">gain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a0bfea60d0fc70f48f9122cc213621649" kindref="member">MPU6050_RA_Z_FINE_GAIN</ref>,<sp/><ref refid="_m_c_p3428_8h_1a5c9c0f59d06b7360c990c3f49be81fa7" kindref="member">gain</ref>);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XA_OFFS_*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1afdfe715ced419d117c2c47007d631f9e" kindref="member">MPU6050::getXAccelOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aab84cbf9368196baad6c34ca5c002a02" kindref="member">MPU6050_RA_XA_OFFS_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a447144e025f55b1dc96d7c209c5defd6" kindref="member">MPU6050::setXAccelOffset</ref>(int16_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1acbe68a802d6a177301736e60bedd1def" kindref="member">I2Cdev::writeWord</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aab84cbf9368196baad6c34ca5c002a02" kindref="member">MPU6050_RA_XA_OFFS_H</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"></highlight><highlight class="comment">//<sp/>YA_OFFS_*<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1a7753d3c3f5d9e341f1ed0712079a0d12" kindref="member">MPU6050::getYAccelOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a42a9f56beb06be04813e1d740e7b9f99" kindref="member">MPU6050_RA_YA_OFFS_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a6214fa36c8881f3b02a3e7033678bfb3" kindref="member">MPU6050::setYAccelOffset</ref>(int16_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1acbe68a802d6a177301736e60bedd1def" kindref="member">I2Cdev::writeWord</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a42a9f56beb06be04813e1d740e7b9f99" kindref="member">MPU6050_RA_YA_OFFS_H</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ZA_OFFS_*<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1ac9a45355c735a09501b6a58c92fb752c" kindref="member">MPU6050::getZAccelOffset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aee1a02e70e57222178bed56f1b435ad3" kindref="member">MPU6050_RA_ZA_OFFS_H</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a4d1868b660d695eae912ef73407e21e8" kindref="member">MPU6050::setZAccelOffset</ref>(int16_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1acbe68a802d6a177301736e60bedd1def" kindref="member">I2Cdev::writeWord</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aee1a02e70e57222178bed56f1b435ad3" kindref="member">MPU6050_RA_ZA_OFFS_H</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight><highlight class="comment">//<sp/>XG_OFFS_USR*<sp/>registers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1a609a2c49b1ab075939e2e3d16694a7c1" kindref="member">MPU6050::getXGyroOffsetUser</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a6e41d8bb53f71f3c9b5f32727ecb290b" kindref="member">MPU6050_RA_XG_OFFS_USRH</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2306a15d278eab385af6ea0fd54c908a" kindref="member">MPU6050::setXGyroOffsetUser</ref>(int16_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1acbe68a802d6a177301736e60bedd1def" kindref="member">I2Cdev::writeWord</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a6e41d8bb53f71f3c9b5f32727ecb290b" kindref="member">MPU6050_RA_XG_OFFS_USRH</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight><highlight class="comment">//<sp/>YG_OFFS_USR*<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1ad3ae5fd84d0a125f65dd1e9f81acc636" kindref="member">MPU6050::getYGyroOffsetUser</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5c416dac853f57163ed4ac3042d7c3a8" kindref="member">MPU6050_RA_YG_OFFS_USRH</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a8504811dc64bb338037ac7c098c86913" kindref="member">MPU6050::setYGyroOffsetUser</ref>(int16_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1acbe68a802d6a177301736e60bedd1def" kindref="member">I2Cdev::writeWord</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a5c416dac853f57163ed4ac3042d7c3a8" kindref="member">MPU6050_RA_YG_OFFS_USRH</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ZG_OFFS_USR*<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal">int16_t<sp/><ref refid="class_m_p_u6050_1a66da03cd0df03c49ad942643482ece9e" kindref="member">MPU6050::getZGyroOffsetUser</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2ec4ac3fb609fb44febcccb136689656" kindref="member">MPU6050_RA_ZG_OFFS_USRH</ref>,<sp/>2,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((int16_t)<ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[1];</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ada31a0757966357c75189f1cd13f0fee" kindref="member">MPU6050::setZGyroOffsetUser</ref>(int16_t<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1acbe68a802d6a177301736e60bedd1def" kindref="member">I2Cdev::writeWord</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2ec4ac3fb609fb44febcccb136689656" kindref="member">MPU6050_RA_ZG_OFFS_USRH</ref>,<sp/>offset);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INT_ENABLE<sp/>register<sp/>(DMP<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a4d02c38682aa566b6204df3f81fbcb68" kindref="member">MPU6050::getIntPLLReadyEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a90d82ed64d6fd2b4b96db163f5dd45d2" kindref="member">MPU6050_INTERRUPT_PLL_RDY_INT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2841"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aef44106927c1b986588f36bffaebea54" kindref="member">MPU6050::setIntPLLReadyEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a90d82ed64d6fd2b4b96db163f5dd45d2" kindref="member">MPU6050_INTERRUPT_PLL_RDY_INT_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3af3f3c0a16b5b68cf6301cb0ac3f392" kindref="member">MPU6050::getIntDMPEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a484dc2c64005652ff208840ddc8c1cff" kindref="member">MPU6050_INTERRUPT_DMP_INT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a889d29900cb0dd16e0199c13822f0f88" kindref="member">MPU6050::setIntDMPEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/><ref refid="_m_p_u6050_8h_1a484dc2c64005652ff208840ddc8c1cff" kindref="member">MPU6050_INTERRUPT_DMP_INT_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DMP_INT_STATUS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a3a86756b7fe164e454f4801c30cdbffe" kindref="member">MPU6050::getDMPInt5Status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a917ac5ff97cc7e9ecee733d20a95825e" kindref="member">MPU6050_RA_DMP_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8a26bc671cd144ca5b3303f5aa43c239" kindref="member">MPU6050_DMPINT_5_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a9d406fd5027e7a6b0e33f5bfafc67627" kindref="member">MPU6050::getDMPInt4Status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a917ac5ff97cc7e9ecee733d20a95825e" kindref="member">MPU6050_RA_DMP_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1ae82e96084d3a3859b6222f3b85b20c56" kindref="member">MPU6050_DMPINT_4_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2862"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a1ac1a70c4d207c93359b43e743d34839" kindref="member">MPU6050::getDMPInt3Status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a917ac5ff97cc7e9ecee733d20a95825e" kindref="member">MPU6050_RA_DMP_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1af856fa148a76775a7d02e91e9b71767e" kindref="member">MPU6050_DMPINT_3_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1acaf41d1789aa02814af0319f71c57a9f" kindref="member">MPU6050::getDMPInt2Status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a917ac5ff97cc7e9ecee733d20a95825e" kindref="member">MPU6050_RA_DMP_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8b2fe81371281ee765a79cebeebc1961" kindref="member">MPU6050_DMPINT_2_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a82a5a98ad80c69209ef0f423287b2f76" kindref="member">MPU6050::getDMPInt1Status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a917ac5ff97cc7e9ecee733d20a95825e" kindref="member">MPU6050_RA_DMP_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a6d264648396a11f5273464f1dd38377b" kindref="member">MPU6050_DMPINT_1_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2b597f3f6b4188cbdb3feb2cd8dd3469" kindref="member">MPU6050::getDMPInt0Status</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a917ac5ff97cc7e9ecee733d20a95825e" kindref="member">MPU6050_RA_DMP_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a528e9ac3e7727082f872490ff59252fc" kindref="member">MPU6050_DMPINT_0_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2878"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight><highlight class="comment">//<sp/>INT_STATUS<sp/>register<sp/>(DMP<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a559de8cd420d329c93f215938e8483e2" kindref="member">MPU6050::getIntPLLReadyStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a90d82ed64d6fd2b4b96db163f5dd45d2" kindref="member">MPU6050_INTERRUPT_PLL_RDY_INT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a715e66c52a2272b54782058772b50d61" kindref="member">MPU6050::getIntDMPStatus</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a8337320c5ccc92def830e968d2e19d75" kindref="member">MPU6050_RA_INT_STATUS</ref>,<sp/><ref refid="_m_p_u6050_8h_1a484dc2c64005652ff208840ddc8c1cff" kindref="member">MPU6050_INTERRUPT_DMP_INT_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight><highlight class="comment">//<sp/>USER_CTRL<sp/>register<sp/>(DMP<sp/>functions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"></highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a2a17e3062b1f321d260fd70f308c6a06" kindref="member">MPU6050::getDMPEnabled</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1abe6d8ea07027d362419de86188981559" kindref="member">I2Cdev::readBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a64a5c31028811ba96a8dc0d9eb02d304" kindref="member">MPU6050_USERCTRL_DMP_EN_BIT</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2896"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1abb6bf6db86b84700c7f13bd838d63755" kindref="member">MPU6050::setDMPEnabled</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>enabled)<sp/>{</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a64a5c31028811ba96a8dc0d9eb02d304" kindref="member">MPU6050_USERCTRL_DMP_EN_BIT</ref>,<sp/>enabled);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a7a9706f177e84b295739198e6b2ded95" kindref="member">MPU6050::resetDMP</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa68890af87de5471d32e583ebbd91acb" kindref="member">I2Cdev::writeBit</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1acd4c638a6f677a42ecb9a3d7612d087a" kindref="member">MPU6050_RA_USER_CTRL</ref>,<sp/><ref refid="_m_p_u6050_8h_1a48ebc61e42fb37e13be19869c7391e7a" kindref="member">MPU6050_USERCTRL_DMP_RESET_BIT</ref>,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BANK_SEL<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aa0c1753f6d2dacb1942fbef156a075bc" kindref="member">MPU6050::setMemoryBank</ref>(uint8_t<sp/>bank,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prefetchEnabled,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>userBank)<sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/>bank<sp/>&amp;=<sp/>0x1F;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userBank)<sp/>bank<sp/>|=<sp/>0x20;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefetchEnabled)<sp/>bank<sp/>|=<sp/>0x40;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a68a2727ce368bc1b2f768a518cf8c844" kindref="member">MPU6050_RA_BANK_SEL</ref>,<sp/>bank);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MEM_START_ADDR<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a45013abb39103e858d432cc720bc351a" kindref="member">MPU6050::setMemoryStartAddress</ref>(uint8_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a2b9fa9064708afc9d0532f53d8d8a3eb" kindref="member">MPU6050_RA_MEM_START_ADDR</ref>,<sp/>address);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MEM_R_W<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a4fb50ebcff2f4e686e3fbbafb70a1f75" kindref="member">MPU6050::readMemoryByte</ref>()<sp/>{</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1571b92d8bf4afbac27987d166192239" kindref="member">MPU6050_RA_MEM_R_W</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="2924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a20de45af9109402f0cfe785f8fdbf439" kindref="member">MPU6050::writeMemoryByte</ref>(uint8_t<sp/>data)<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1571b92d8bf4afbac27987d166192239" kindref="member">MPU6050_RA_MEM_R_W</ref>,<sp/>data);</highlight></codeline>
<codeline lineno="2927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a04d8d5e7b62605aed15f07f52afa74ca" kindref="member">MPU6050::readMemoryBlock</ref>(uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataSize,<sp/>uint8_t<sp/>bank,<sp/>uint8_t<sp/>address)<sp/>{</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1aa0c1753f6d2dacb1942fbef156a075bc" kindref="member">setMemoryBank</ref>(bank);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a45013abb39103e858d432cc720bc351a" kindref="member">setMemoryStartAddress</ref>(address);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>chunkSize;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint16_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dataSize;)<sp/>{</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>correct<sp/>chunk<sp/>size<sp/>according<sp/>to<sp/>bank<sp/>position<sp/>and<sp/>data<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkSize<sp/>=<sp/><ref refid="_m_p_u6050_8h_1a49306862a4b9c8f26329221fad9546f5" kindref="member">MPU6050_DMP_MEMORY_CHUNK_SIZE</ref>;</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>go<sp/>past<sp/>the<sp/>data<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>chunkSize<sp/>&gt;<sp/>dataSize)<sp/>chunkSize<sp/>=<sp/>dataSize<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>this<sp/>chunk<sp/>doesn&apos;t<sp/>go<sp/>past<sp/>the<sp/>bank<sp/>boundary<sp/>(256<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunkSize<sp/>&gt;<sp/>256<sp/>-<sp/>address)<sp/>chunkSize<sp/>=<sp/>256<sp/>-<sp/>address;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>the<sp/>chunk<sp/>of<sp/>data<sp/>as<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1571b92d8bf4afbac27987d166192239" kindref="member">MPU6050_RA_MEM_R_W</ref>,<sp/>chunkSize,<sp/>data<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>byte<sp/>index<sp/>by<sp/>[chunkSize]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>chunkSize;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>automatically<sp/>wraps<sp/>to<sp/>0<sp/>at<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>+=<sp/>chunkSize;</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>aren&apos;t<sp/>done,<sp/>update<sp/>bank<sp/>(if<sp/>necessary)<sp/>and<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>dataSize)<sp/>{</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>==<sp/>0)<sp/>bank++;</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1aa0c1753f6d2dacb1942fbef156a075bc" kindref="member">setMemoryBank</ref>(bank);</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a45013abb39103e858d432cc720bc351a" kindref="member">setMemoryStartAddress</ref>(address);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aae135772b45e1c7968b55f4f01b3757f" kindref="member">MPU6050::writeMemoryBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataSize,<sp/>uint8_t<sp/>bank,<sp/>uint8_t<sp/>address,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verify,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1aa0c1753f6d2dacb1942fbef156a075bc" kindref="member">setMemoryBank</ref>(bank);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a45013abb39103e858d432cc720bc351a" kindref="member">setMemoryStartAddress</ref>(address);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>chunkSize;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*verifyBuffer;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*progBuffer<sp/>=<sp/>NULL;<sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>compiler<sp/>quiet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>j;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verify)<sp/>verifyBuffer<sp/>=<sp/>(uint8_t<sp/>*)malloc(<ref refid="_m_p_u6050_8h_1a49306862a4b9c8f26329221fad9546f5" kindref="member">MPU6050_DMP_MEMORY_CHUNK_SIZE</ref>);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>progBuffer<sp/>=<sp/>(uint8_t<sp/>*)malloc(<ref refid="_m_p_u6050_8h_1a49306862a4b9c8f26329221fad9546f5" kindref="member">MPU6050_DMP_MEMORY_CHUNK_SIZE</ref>);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dataSize;)<sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>correct<sp/>chunk<sp/>size<sp/>according<sp/>to<sp/>bank<sp/>position<sp/>and<sp/>data<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chunkSize<sp/>=<sp/><ref refid="_m_p_u6050_8h_1a49306862a4b9c8f26329221fad9546f5" kindref="member">MPU6050_DMP_MEMORY_CHUNK_SIZE</ref>;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>we<sp/>don&apos;t<sp/>go<sp/>past<sp/>the<sp/>data<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>chunkSize<sp/>&gt;<sp/>dataSize)<sp/>chunkSize<sp/>=<sp/>dataSize<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>this<sp/>chunk<sp/>doesn&apos;t<sp/>go<sp/>past<sp/>the<sp/>bank<sp/>boundary<sp/>(256<sp/>bytes)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(chunkSize<sp/>&gt;<sp/>256<sp/>-<sp/>address)<sp/>chunkSize<sp/>=<sp/>256<sp/>-<sp/>address;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>chunk<sp/>of<sp/>data<sp/>as<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>chunkSize;<sp/>j++)<sp/>progBuffer[j]<sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae6778ca2c38951f24bd39f9c38cab9b2" kindref="member">pgm_read_byte</ref>(data<sp/>+<sp/>i<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>the<sp/>chunk<sp/>of<sp/>data<sp/>as<sp/>specified</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progBuffer<sp/>=<sp/>(uint8_t<sp/>*)data<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aa4e39cac6c0eac5112f9132084bcc93e" kindref="member">I2Cdev::writeBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1571b92d8bf4afbac27987d166192239" kindref="member">MPU6050_RA_MEM_R_W</ref>,<sp/>chunkSize,<sp/>progBuffer);</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>verify<sp/>data<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verify<sp/>&amp;&amp;<sp/>verifyBuffer)<sp/>{</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1aa0c1753f6d2dacb1942fbef156a075bc" kindref="member">setMemoryBank</ref>(bank);</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a45013abb39103e858d432cc720bc351a" kindref="member">setMemoryStartAddress</ref>(address);</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aca9c503da5cffd6ac6f8eff9b195c5f4" kindref="member">I2Cdev::readBytes</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1571b92d8bf4afbac27987d166192239" kindref="member">MPU6050_RA_MEM_R_W</ref>,<sp/>chunkSize,<sp/>verifyBuffer);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(progBuffer,<sp/>verifyBuffer,<sp/>chunkSize)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Serial.print(&quot;Block<sp/>write<sp/>verification<sp/>error,<sp/>bank<sp/>&quot;);</highlight></codeline>
<codeline lineno="2996"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(bank,<sp/>DEC);</highlight></codeline>
<codeline lineno="2997"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;,<sp/>address<sp/>&quot;);</highlight></codeline>
<codeline lineno="2998"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(address,<sp/>DEC);</highlight></codeline>
<codeline lineno="2999"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;!\nExpected:&quot;);</highlight></codeline>
<codeline lineno="3000"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>chunkSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="3001"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;<sp/>0x&quot;);</highlight></codeline>
<codeline lineno="3002"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(progBuffer[j]<sp/>&lt;<sp/>16)<sp/>Serial.print(&quot;0&quot;);</highlight></codeline>
<codeline lineno="3003"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(progBuffer[j],<sp/>HEX);</highlight></codeline>
<codeline lineno="3004"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;\nReceived:&quot;);</highlight></codeline>
<codeline lineno="3006"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(uint8_t<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>chunkSize;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="3007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;<sp/>0x&quot;);</highlight></codeline>
<codeline lineno="3008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(verifyBuffer[i<sp/>+<sp/>j]<sp/>&lt;<sp/>16)<sp/>Serial.print(&quot;0&quot;);</highlight></codeline>
<codeline lineno="3009"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(verifyBuffer[i<sp/>+<sp/>j],<sp/>HEX);</highlight></codeline>
<codeline lineno="3010"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3011"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;\n&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(verifyBuffer);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>free(progBuffer);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>uh<sp/>oh.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>increase<sp/>byte<sp/>index<sp/>by<sp/>[chunkSize]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>chunkSize;</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>uint8_t<sp/>automatically<sp/>wraps<sp/>to<sp/>0<sp/>at<sp/>256</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>address<sp/>+=<sp/>chunkSize;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>aren&apos;t<sp/>done,<sp/>update<sp/>bank<sp/>(if<sp/>necessary)<sp/>and<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>dataSize)<sp/>{</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(address<sp/>==<sp/>0)<sp/>bank++;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1aa0c1753f6d2dacb1942fbef156a075bc" kindref="member">setMemoryBank</ref>(bank);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_m_p_u6050_1a45013abb39103e858d432cc720bc351a" kindref="member">setMemoryStartAddress</ref>(address);</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(verify)<sp/>free(verifyBuffer);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>free(progBuffer);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3034"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a201dc0aa819f451584c575c5a7590e10" kindref="member">MPU6050::writeProgMemoryBlock</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataSize,<sp/>uint8_t<sp/>bank,<sp/>uint8_t<sp/>address,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verify)<sp/>{</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aae135772b45e1c7968b55f4f01b3757f" kindref="member">writeMemoryBlock</ref>(data,<sp/>dataSize,<sp/>bank,<sp/>address,<sp/>verify,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1abe4f64f68164116b2ec94fe1d987929a" kindref="member">MPU6050::writeDMPConfigurationSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataSize,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>*progBuffer<sp/>=<sp/>NULL,<sp/>success,<sp/>special;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progBuffer<sp/>=<sp/>(uint8_t<sp/>*)malloc(8);<sp/></highlight><highlight class="comment">//<sp/>assume<sp/>8-byte<sp/>blocks,<sp/>realloc<sp/>later<sp/>if<sp/>necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>config<sp/>set<sp/>data<sp/>is<sp/>a<sp/>long<sp/>string<sp/>of<sp/>blocks<sp/>with<sp/>the<sp/>following<sp/>structure:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>[bank]<sp/>[offset]<sp/>[length]<sp/>[byte[0],<sp/>byte[1],<sp/>...,<sp/>byte[length]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bank,<sp/>offset,<sp/>length;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dataSize;)<sp/>{</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bank<sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae6778ca2c38951f24bd39f9c38cab9b2" kindref="member">pgm_read_byte</ref>(data<sp/>+<sp/>i++);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae6778ca2c38951f24bd39f9c38cab9b2" kindref="member">pgm_read_byte</ref>(data<sp/>+<sp/>i++);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae6778ca2c38951f24bd39f9c38cab9b2" kindref="member">pgm_read_byte</ref>(data<sp/>+<sp/>i++);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bank<sp/>=<sp/>data[i++];</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>data[i++];</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>=<sp/>data[i++];</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>data<sp/>or<sp/>perform<sp/>special<sp/>action</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>regular<sp/>block<sp/>of<sp/>data<sp/>to<sp/>write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Serial.print(&quot;Writing<sp/>config<sp/>block<sp/>to<sp/>bank<sp/>&quot;);</highlight></codeline>
<codeline lineno="3063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(bank);</highlight></codeline>
<codeline lineno="3064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;,<sp/>offset<sp/>&quot;);</highlight></codeline>
<codeline lineno="3065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(offset);</highlight></codeline>
<codeline lineno="3066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(&quot;,<sp/>length=&quot;);</highlight></codeline>
<codeline lineno="3067"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(length);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(progBuffer)<sp/>&lt;<sp/>length)<sp/>progBuffer<sp/>=<sp/>(uint8_t<sp/>*)realloc(progBuffer,<sp/>length);</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>length;<sp/>j++)<sp/>progBuffer[j]<sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae6778ca2c38951f24bd39f9c38cab9b2" kindref="member">pgm_read_byte</ref>(data<sp/>+<sp/>i<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>progBuffer<sp/>=<sp/>(uint8_t<sp/>*)data<sp/>+<sp/>i;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/><ref refid="class_m_p_u6050_1aae135772b45e1c7968b55f4f01b3757f" kindref="member">writeMemoryBlock</ref>(progBuffer,<sp/>length,<sp/>bank,<sp/>offset,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>length;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>instruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NOTE:<sp/>this<sp/>kind<sp/>of<sp/>behavior<sp/>(what<sp/>and<sp/>when<sp/>to<sp/>do<sp/>certain<sp/>things)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>totally<sp/>undocumented.<sp/>This<sp/>code<sp/>is<sp/>in<sp/>here<sp/>based<sp/>on<sp/>observed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>behavior<sp/>only,<sp/>and<sp/>exactly<sp/>why<sp/>(or<sp/>even<sp/>whether)<sp/>it<sp/>has<sp/>to<sp/>be<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>anybody&apos;s<sp/>guess<sp/>for<sp/>now.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>{</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/><ref refid="_m_p_u6050_8h_1ae6778ca2c38951f24bd39f9c38cab9b2" kindref="member">pgm_read_byte</ref>(data<sp/>+<sp/>i++);</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>special<sp/>=<sp/>data[i++];</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Serial.print(&quot;Special<sp/>command<sp/>code<sp/>&quot;);</highlight></codeline>
<codeline lineno="3088"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.print(special,<sp/>HEX);</highlight></codeline>
<codeline lineno="3089"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Serial.println(&quot;<sp/>found...&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(special<sp/>==<sp/>0x01)<sp/>{</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>DMP-related<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setIntZeroMotionEnabled(true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setIntFIFOBufferOverflowEnabled(true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//setIntDMPEnabled(true);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1a1de9d9557aa7420c746721999df4a377" kindref="member">MPU6050_RA_INT_ENABLE</ref>,<sp/>0x32);<sp/><sp/></highlight><highlight class="comment">//<sp/>single<sp/>operation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>unknown<sp/>special<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!success)<sp/>{</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>free(progBuffer);</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>uh<sp/>oh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useProgMem)<sp/>free(progBuffer);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a160a3d018a81eb85a33874a43f44b3ea" kindref="member">MPU6050::writeProgDMPConfigurationSet</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t<sp/>*data,<sp/>uint16_t<sp/>dataSize)<sp/>{</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1abe4f64f68164116b2ec94fe1d987929a" kindref="member">writeDMPConfigurationSet</ref>(data,<sp/>dataSize,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DMP_CFG_1<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a421cdf4cea9fea87decbd69084ba4956" kindref="member">MPU6050::getDMPConfig1</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aec20dc57c7da6d3a849cdce39a4c3f18" kindref="member">MPU6050_RA_DMP_CFG_1</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="3122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1a0126b95e4074de16bb61d9c4e4cf837f" kindref="member">MPU6050::setDMPConfig1</ref>(uint8_t<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1aec20dc57c7da6d3a849cdce39a4c3f18" kindref="member">MPU6050_RA_DMP_CFG_1</ref>,<sp/>config);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DMP_CFG_2<sp/>register</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal">uint8_t<sp/><ref refid="class_m_p_u6050_1a29594027f88c291708a38fba67c4ecd5" kindref="member">MPU6050::getDMPConfig2</ref>()<sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1ad3fb41ce124a29f93749d99611c75c33" kindref="member">I2Cdev::readByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ab52b8dc0dd01d3c77b9969a6b1c91854" kindref="member">MPU6050_RA_DMP_CFG_2</ref>,<sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1ad2000cad671bb7b293e26f2d463d4cea" kindref="member">buffer</ref>[0];</highlight></codeline>
<codeline lineno="3132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_m_p_u6050_1aea90c3e6a6666f070f7833a913cfa821" kindref="member">MPU6050::setDMPConfig2</ref>(uint8_t<sp/>config)<sp/>{</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_i2_cdev_1aeb297637ef985cd562da465ba61b7042" kindref="member">I2Cdev::writeByte</ref>(<ref refid="class_m_p_u6050_1ad248bbf6e9da395ab67f7049b50ae474" kindref="member">devAddr</ref>,<sp/><ref refid="_m_p_u6050_8h_1ab52b8dc0dd01d3c77b9969a6b1c91854" kindref="member">MPU6050_RA_DMP_CFG_2</ref>,<sp/>config);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="code/MPU6050/MPU6050.cpp"/>
  </compounddef>
</doxygen>
