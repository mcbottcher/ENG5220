<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="class_demo_timer2" kind="class" language="C++" prot="public">
    <compoundname>DemoTimer2</compoundname>
    <basecompoundref refid="class_cpp_timer" prot="public" virt="non-virtual">CppTimer</basecompoundref>
    <basecompoundref refid="class_cpp_timer" prot="public" virt="non-virtual">CppTimer</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_demo_timer2_1a6b4c4466d4bf53026efd93f0511d4195" prot="public" static="no" mutable="no">
        <type><ref refid="class_demo_timer1" kindref="compound">DemoTimer1</ref> *</type>
        <definition>DemoTimer1* DemoTimer2::demoTimer1</definition>
        <argsstring></argsstring>
        <name>demoTimer1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="26" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_demo_timer2_1a8e5183f647e8f8c1cdebbfdf4c46b206" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DemoTimer2::timerEvent</definition>
        <argsstring>()</argsstring>
        <name>timerEvent</name>
        <reimplements refid="class_cpp_timer_1ac2665403595b6aee5f581d0ebfeb886c">timerEvent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract function which needs to be implemented by the children. This is called every time the timer fires. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/demo.cpp" line="18" column="1" bodyfile="code/cppTimer/demo.cpp" bodystart="18" bodyend="20"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_demo_timer2_1afb8722720b2c5dfdb17723d2c5096180" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DemoTimer2::DemoTimer2</definition>
        <argsstring>(DemoTimer1 *dt1)</argsstring>
        <name>DemoTimer2</name>
        <param>
          <type><ref refid="class_demo_timer1" kindref="compound">DemoTimer1</ref> *</type>
          <declname>dt1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="27" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="27" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="class_demo_timer2_1a8e5183f647e8f8c1cdebbfdf4c46b206" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DemoTimer2::timerEvent</definition>
        <argsstring>()</argsstring>
        <name>timerEvent</name>
        <reimplements refid="class_cpp_timer_1ac2665403595b6aee5f581d0ebfeb886c">timerEvent</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Abstract function which needs to be implemented by the children. This is called every time the timer fires. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/cppTimer/test/twotimers.cpp" line="30" column="1" bodyfile="code/cppTimer/test/twotimers.cpp" bodystart="30" bodyend="37"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="32">
        <label>CppTimer</label>
        <link refid="class_cpp_timer"/>
      </node>
      <node id="31">
        <label>DemoTimer2</label>
        <link refid="class_demo_timer2"/>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
        <childnode refid="32" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="34">
        <label>CppTimer</label>
        <link refid="class_cpp_timer"/>
      </node>
      <node id="35">
        <label>DemoTimer1</label>
        <link refid="class_demo_timer1"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>DemoTimer2</label>
        <link refid="class_demo_timer2"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
        <childnode refid="35" relation="usage">
          <edgelabel>demoTimer1</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="code/cppTimer/demo.cpp" line="16" column="1" bodyfile="code/cppTimer/demo.cpp" bodystart="16" bodyend="21"/>
    <listofallmembers>
      <member refid="class_cpp_timer_1a327a07c051b9b60fcc61e6fd8f40f381" prot="public" virt="non-virtual"><scope>DemoTimer2</scope><name>CppTimer</name></member>
      <member refid="class_demo_timer2_1a6b4c4466d4bf53026efd93f0511d4195" prot="public" virt="non-virtual"><scope>DemoTimer2</scope><name>demoTimer1</name></member>
      <member refid="class_demo_timer2_1afb8722720b2c5dfdb17723d2c5096180" prot="public" virt="non-virtual"><scope>DemoTimer2</scope><name>DemoTimer2</name></member>
      <member refid="class_cpp_timer_1a64989025caa3c030c6c397ca76a2d20b" prot="public" virt="virtual"><scope>DemoTimer2</scope><name>start</name></member>
      <member refid="class_cpp_timer_1a4bb95ddee98a536d0818b8f6096bf7e7" prot="public" virt="virtual"><scope>DemoTimer2</scope><name>stop</name></member>
      <member refid="class_demo_timer2_1a8e5183f647e8f8c1cdebbfdf4c46b206" prot="private" virt="virtual"><scope>DemoTimer2</scope><name>timerEvent</name></member>
      <member refid="class_demo_timer2_1a8e5183f647e8f8c1cdebbfdf4c46b206" prot="public" virt="virtual"><scope>DemoTimer2</scope><name>timerEvent</name></member>
      <member refid="class_cpp_timer_1a91779a93fce7383a8d832ed481399342" prot="public" virt="virtual"><scope>DemoTimer2</scope><name>~CppTimer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
